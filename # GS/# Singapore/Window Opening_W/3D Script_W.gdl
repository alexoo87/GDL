

!======================================================================================================
!	Window Maker(Opening) 20 
!======================================================================================================
!   DATE : 2017/4/12 WED
!   VER : AC 20
!	DEV : JO HYUNG JUN



!----------------------------------------------------------------------------------------------
!  Genaral
!----------------------------------------------------------------------------------------------
eps = 0.00003
unID = 1000
resol	12

	!	3D Text Define
	!----------------------------------------------------------------------------------------------
	font_type = "Arial"
	font_size = 50
	anchor = 5
	face_code = 0
	define style 	"textStyle_3D" font_type, font_size, anchor, face_code
	set	style	"textStyle_3D"


	!	MVO_ Openline
	!----------------------------------------------------------------------------------------------
	_bMVO = libraryglobal("LibraryGlobals13",	"W_showBOpLine3D",	bMVO)
	_bOplineStyle = libraryglobal("LibraryGlobals13",	"gs_opline_style_m",	or_iOplineStyle)
	_bOplineIn = libraryglobal("LibraryGlobals13",	"gs_opline_type_m",	_opLineIn)
	_bOplineOut = libraryglobal("LibraryGlobals13",	"gs_opline_type_m_out",	_opLineOut)

	if	bMVO	then
		or_iOplineStyle = or_iOplineStyle
		if	iDirect = Direct_Normal	then
			if	_bOplineIn > 0	then	or_iOpLineType3dIn = _opLineIn - 1
			if	_bOplineOut > 0	then	or_iOpLineType3dOut = _opLineOut - 1
		else
			if	_bOplineIn > 0	then	or_iOpLineType3dIn = _opLineOut - 1
			if	_bOplineOut > 0	then	or_iOpLineType3dOut = _opLineIn - 1
		endif
		if	iOpening_type = Type_Double_GS	then
			if	or_iOplineStyle = 1	then	_iOplineStyle = 3
			if	or_iOplineStyle = 2	then	_iOplineStyle = 4
		endif
		if	iOpening_type = Type_Double_GS_M	then
			if	or_iOplineStyle = 1	then	_iOplineStyle = 4
			if	or_iOplineStyle = 2	then	_iOplineStyle = 3
		endif
	else
		or_iOplineStyle = 2
		or_iOpLineType3dIn = 1
		or_iOpLineType3dOut = 1
		_iOplineStyle = 4
	endif


!----------------------------------------------------------------------------------------------
!  3D Shape
!----------------------------------------------------------------------------------------------
addz	mOpening_posy_insert + mOpening_posy_reveal

	!----------------------------------------------------------------------------------------------
	!  Test Script
	!----------------------------------------------------------------------------------------------
	pen	iText_pen
	material iText_mat
!	sphere 0.02					!	W.P.


	!----------------------------------------------------------------------------------------------
	!	Definition of Parameters
	!----------------------------------------------------------------------------------------------
	dim	SashPosXtmp[],	SashPosYtmp[]

	SashPosXtmp[1] = gs_sash_width
	SashPosYtmp[1] = gs_sash_width

	for	i = 2	to	iCoordinate_num
		if	i # iCoordinate_num	then	numTmp = i + 1
		if	i = iCoordinate_num	then	numTmp = 1

			if	mLayout_Coordinate[i][1] > mLayout_Coordinate[numTmp][1] and mLayout_Coordinate[i-1][2] < mLayout_Coordinate[i][2]	then
				SashPosXtmp[i] = gs_sash_width
				SashPosYtmp[i] = gs_sash_width
			endif
			if	mLayout_Coordinate[i][1] > mLayout_Coordinate[numTmp][1] and mLayout_Coordinate[i-1][2] > mLayout_Coordinate[i][2]	then
				SashPosXtmp[i] = -gs_sash_width
				SashPosYtmp[i] = gs_sash_width
			endif

			if	mLayout_Coordinate[i][1] < mLayout_Coordinate[numTmp][1] and mLayout_Coordinate[i-1][2] < mLayout_Coordinate[i][2]	then
				SashPosXtmp[i] = gs_sash_width
				SashPosYtmp[i] = -gs_sash_width
			endif
			if	mLayout_Coordinate[i][1] < mLayout_Coordinate[numTmp][1] and mLayout_Coordinate[i-1][2] > mLayout_Coordinate[i][2]	then
				SashPosXtmp[i] = -gs_sash_width
				SashPosYtmp[i] = -gs_sash_width
			endif

			if	mLayout_Coordinate[i-1][1] > mLayout_Coordinate[i][1] and mLayout_Coordinate[i][2] < mLayout_Coordinate[numTmp][2]	then
				SashPosXtmp[i] = gs_sash_width
				SashPosYtmp[i] = gs_sash_width
			endif
			if	mLayout_Coordinate[i-1][1] > mLayout_Coordinate[i][1] and mLayout_Coordinate[i][2] > mLayout_Coordinate[numTmp][2]	then
				SashPosXtmp[i] = -gs_sash_width
				SashPosYtmp[i] = gs_sash_width
			endif

			if	mLayout_Coordinate[i-1][1] < mLayout_Coordinate[i][1] and mLayout_Coordinate[i][2] < mLayout_Coordinate[numTmp][2]	then
				SashPosXtmp[i] = gs_sash_width
				SashPosYtmp[i] = -gs_sash_width
			endif
			if	mLayout_Coordinate[i-1][1] < mLayout_Coordinate[i][1] and mLayout_Coordinate[i][2] > mLayout_Coordinate[numTmp][2]	then
				SashPosXtmp[i] = -gs_sash_width
				SashPosYtmp[i] = -gs_sash_width
			endif
	next i


	!----------------------------------------------------------------------------------------------
	!	Opening - Window
	!----------------------------------------------------------------------------------------------
	pen	gs_sash_pen
	
	add		mOpening_posX, mOpening_posY, 0

		! if	iSymbol_reveal_side = 0	then
		! 	addz	gs_sash_thk
		! else
		! 	addz	0
		! endif

			! 	Opening Index
			!----------------------------------------------------------------------------------------------
			if	bOpening_index	then
				gosub	"Opening_index"
			endif


			!	Type = Fixed Glass / Frameless
			!----------------------------------------------------------------------------------------------
			if	iOpening_type = Type_FixedGlass or iOpening_type = Type_Frameless	then

				gosub	"SashFrame"	!	SashFrame

				gosub	"Window"	!	Window

			endif

			!	Type = Grill
			!----------------------------------------------------------------------------------------------
			if	iOpening_type = Type_Grill	then
				add	mOpeningWidth/2 + mOpening_Coordinate[1][1],	mOpening_Coordinate[1][2],	0.025
					call	"Casement_rectangular"	parameters all	iWindowClass = 1,
																	iWindowType = 1,
																	A = mOpeningWidth,
																	B = mOpeningHeight,
																	gs_rebate_width = 0,
																	gs_sash_mat = gs_sash_mat,
																	gs_sash_mat2 = gs_sash_mat,
																	gs_optype_m_01 = 2,
																	gs_optype_m = 4,
																	iMullionStyle_01 = 16,
																	gs_ventSashLouver_mat = gs_sash_mat,
																	gs_sash_pen = gs_sash_pen,
																	gs_fillSash = iWindow_fill_type,
																	gs_penSash_fg = iWindow_fill_pen,
																	gs_penSash_bg = iWindow_back_pen
				del 1
			endif

			!	Type = from Macro
			!----------------------------------------------------------------------------------------------
			if	iOpening_type # Type_FixedGlass and iOpening_type # Type_Frameless and iOpening_type # Type_Double_GS and iOpening_type # Type_Double_GS_M and	\
				iOpening_type # Type_Sliding3 and iOpening_type # Type_Sliding4 and iOpening_type # Type_Sliding6 and iOpening_type # Type_Grill	then

				if	iOpening_type = Type_HorPivot or	\
					iOpening_type = Type_VerPivot or	\
					iOpening_type = Type_VerPivot_M	then	addz	-gs_sash_thk + 0.025

				if	iOpening_type = Type_SlidingHor or	\
					iOpening_type = Type_SlidingHor_M or	\
					iOpening_type = Type_DoubleSlidingHor or	\
					iOpening_type = Type_DoubleSlidingHor_M	or	\
					iOpening_type = Type_SlidingVer or	\
					iOpening_type = Type_DoubleSlidingVer	then	addz	-gs_sash_thk + 0.025

				add	mOpeningWidth/2 + mOpening_Coordinate[1][1],	mOpening_Coordinate[1][2],	gs_sash_thk + gs_sash_thk - 0.025
					call	"gs_general_window_macro"	parameters all	iWindowClass = 1,
																		iWindowType = 1,
																		ac_unit_width = mOpeningWidth,
																		ac_leaf_width = mOpeningWidth,
																		ac_reveal_width = mOpeningWidth,
																		ac_wallhole_width = mOpeningWidth,
																		ac_unit_height = mOpeningHeight,
																		ac_leaf_height = mOpeningHeight,
																		ac_reveal_height = mOpeningHeight,
																		ac_wallhole_height = mOpeningHeight,
																		gs_frame_thk = gs_sash_thk,
																		gs_frame_width = eps,
																		gs_frame_width_left = eps,
																		gs_frame_width_upper = eps,
																		gs_frame_width_lower = eps,
																		gs_rebate_width = 0,
																		gs_sash_mat = gs_sash_mat,
																		gs_sash_mat2 = gs_sash_mat,
																		bOverride_MVO_3D = 1,
																		or_bOplines3d = 1,
																		or_iOplineStyle = or_iOplineStyle,
																		or_iOpLineType3dIn = or_iOpLineType3dIn,
																		or_iOpLineType3dOut = or_iOpLineType3dOut,
																		or_OpLinePen = gs_opLinePen,
																		gs_optype_m_01 = iOpening_type,
																		gs_sash_pen = gs_sash_pen,
																		gs_bFills = 1,
																		gs_fillSash = iWindow_fill_type,
																		gs_penSash_fg = iWindow_fill_pen,
																		gs_penSash_bg = iWindow_back_pen,
																		gs_fillFr = iWindow_fill_type,
																		gs_penFr_fg = iWindow_fill_pen,
																		gs_penFr_bg = iWindow_back_pen,
																		gs_fillShCover = iWindow_fill_type,
																		gs_penShCov_fg = iWindow_fill_pen,
																		gs_penShCov_bg = iWindow_back_pen
				del 1

				if	iOpening_type = Type_HorPivot or	\
					iOpening_type = Type_VerPivot or	\
					iOpening_type = Type_VerPivot_M or \
					iOpening_type = Type_SlidingHor or	\
					iOpening_type = Type_SlidingHor_M or	\
					iOpening_type = Type_DoubleSlidingHor or	\
					iOpening_type = Type_DoubleSlidingHor_M	or	\
					iOpening_type = Type_SlidingVer or	\
					iOpening_type = Type_DoubleSlidingVer	then	del 1
			endif

			!	Type = Slinding(3),(4),(6)
			!----------------------------------------------------------------------------------------------
			if	iOpening_type = Type_Sliding3 or iOpening_type = Type_Sliding4 or iOpening_type = Type_Sliding6	then

				!	Opening Type				
				if	iOpening_type = Type_Sliding3	then	TypeTmp = 46
				if	iOpening_type = Type_Sliding4	then	TypeTmp = 17
				if	iOpening_type = Type_Sliding6	then	TypeTmp = 47

				add	mOpeningWidth/2 + mOpening_Coordinate[1][1],	mOpening_Coordinate[1][2],	gs_sash_thk
					call	"GeneralSlidingWindow_m"	parameters	all	ac_unit_width = mOpeningWidth,
																		ac_leaf_width = mOpeningWidth,
																		ac_reveal_width = mOpeningWidth,
																		ac_wallhole_width = mOpeningWidth,
																		ac_unit_height = mOpeningHeight,
																		ac_leaf_height = mOpeningHeight,
																		ac_reveal_height = mOpeningHeight,
																		ac_wallhole_height = mOpeningHeight,
																		gs_frame_thk = gs_sash_thk,
																		gs_frame_width = 0,
																		gs_uniform_framewidth = 1,
																		iWindowType = TypeTmp,
																		gs_sash_pen = gs_sash_pen,
																		gs_sash_mat2 = gs_sash_mat,
																		gs_fillSash = iWindow_fill_type,
																		gs_penSash_fg = iWindow_fill_pen,
																		gs_penSash_bg = iWindow_back_pen,
																		gs_fillFr = iWindow_fill_type,
																		gs_penFr_fg = iWindow_fill_pen,
																		gs_penFr_bg = iWindow_back_pen,
																		gs_fillShCover = iWindow_fill_type,
																		gs_penShCov_fg = iWindow_fill_pen,
																		gs_penShCov_bg = iWindow_back_pen,
																		bOverride_MVO_3D = 1,
																		or_opLinePen = gs_opLinePen,
																		bShowAddHotspotsForIS = 0
				del 1
			endif

			!	Type = Double Window (GS)
			!----------------------------------------------------------------------------------------------
			if	iOpening_type = Type_Double_GS | iOpening_type = Type_Double_GS_M	then

				!	Move axis of Rotation
				addx	mOpeningWidth + mOpening_Coordinate[1][1]

					!	Hotspot of aOpeningAngle
!					hotspot	-mOpeningWidth,						mOpeningHeight/2 + mOpening_Coordinate[1][2],	0,									unID,	aOpeningAngle,	4+128	:	unID = unID + 1
!					hotspot	-mOpeningWidth*cos(aOpeningAngle),	mOpeningHeight/2 + mOpening_Coordinate[1][2],	-mOpeningWidth*sin(aOpeningAngle),	unID,	aOpeningAngle,	5		:	unID = unID + 1
!					hotspot	0,									mOpeningHeight/2 + mOpening_Coordinate[1][2],	0,									unID,	aOpeningAngle,	6		:	unID = unID + 1

					roty	-aOpeningAngle
				addx	-(mOpeningWidth + mOpening_Coordinate[1][1])

				gosub	"SashFrame"	!	SashFrame

			
				!	Sub Horizontal Frame
				material	gs_sash_mat
				sect_fill	iWindow_fill_type,	iWindow_back_pen,	iWindow_fill_pen,	gs_sash_pen

				add	mOpening_Coordinate[1][1],	mOpening_Coordinate[1][2],	0

					!	Opening Line
					if	GLOB_VIEW_TYPE # 2	then
						call	"OpeningLines"	parameters	A = mOpeningWidth,
															B = mOpeningHeight,
															frameThickness = gs_sash_thk,
															iOpeningType = _iOplineStyle,
															opLineType3DIn = or_iOpLineType3dIn,
															opLineType3DOut = or_iOpLineType3dOut,
															gs_opLinePen = gs_opLinePen
					endif

					addy	mOpening_sub - gs_sash_width/2
						put	gs_sash_width,					0,
							gs_sash_width,					gs_sash_width,
							mOpeningWidth - gs_sash_width,	gs_sash_width,
							mOpeningWidth - gs_sash_width,	0

							prism	nsp/2,	gs_sash_thk,	get(nsp)
					del 1

!					addx	mOpeningWidth/2
!						hotspot	0,	0,				0,	unID,	mOpening_sub,	1+128	:	unID = unID + 1
!						hotspot	0,	-1,				0,	unID,	mOpening_sub,	3		:	unID = unID + 1
!						hotspot	0,	mOpening_sub,	0,	unID,	mOpening_sub,	2		:	unID = unID + 1
!					del 1

						!	Window
						material	gs_glass_mat

						addz	(gs_sash_thk - gs_glass_thk)/2
							put	gs_sash_width,	gs_sash_width,
								gs_sash_width,	mOpening_sub - gs_sash_width/2,
								mOpeningWidth - gs_sash_width,	mOpening_sub - gs_sash_width/2,
								mOpeningWidth - gs_sash_width,	gs_sash_width

								prism	nsp/2,	gs_glass_thk,	get(nsp)
						del 1
				
					!	Sub Sash Frame
					material	gs_sash_mat

					_subSashHeight = mOpeningHeight - (mOpening_sub + gs_sash_width*1.5)
					_subSashWidth = mOpeningWidth - gs_sash_width*2

					add	gs_sash_width,	mOpening_sub + gs_sash_width/2,	0

						!	Opening Line
						if	GLOB_VIEW_TYPE # 2	then
							call	"OpeningLines"	parameters	A = _subSashWidth,
																B = _subSashHeight,
																frameThickness = gs_sash_thk,
																iOpeningType = 7,
																opLineType3DIn = or_iOpLineType3dIn,
																opLineType3DOut = or_iOpLineType3dOut,
																gs_opLinePen = gs_opLinePen
						endif

						!	Hotspot of aOpeningAngle_sub
!						hotspot	_subSashWidth/2,	_subSashHeight,							0,										unID,	aOpeningAngle_sub,	4+128	:	unID = unID + 1
!						hotspot	_subSashWidth/2,	_subSashHeight*cos(aOpeningAngle_sub),	-_subSashHeight*sin(aOpeningAngle_sub),	unID,	aOpeningAngle_sub,	5		:	unID = unID + 1
!						hotspot	_subSashWidth/2,	0,										0,										unID,	aOpeningAngle_sub,	6		:	unID = unID + 1

						rotx	-aOpeningAngle_sub
							put	0,								0,								15,
								0,								_subSashHeight,					15,
								_subSashWidth,					_subSashHeight,					15,
								_subSashWidth,					0,								15,
								0,								0,								-1,
								gs_sash_width,					gs_sash_width,					15,
								gs_sash_width,					_subSashHeight - gs_sash_width,	15,
								_subSashWidth - gs_sash_width,	_subSashHeight - gs_sash_width,	15,
								_subSashWidth - gs_sash_width,	gs_sash_width,					15,
								gs_sash_width,					gs_sash_width,					-1

								
								prism_	nsp/3,	gs_sash_thk,	get(nsp)
							

							!	Window
							material	gs_glass_mat

							addz	(gs_sash_thk - gs_glass_thk)/2
								put	gs_sash_width,					gs_sash_width,
									gs_sash_width,					_subSashHeight - gs_sash_width,
									_subSashWidth - gs_sash_width,	_subSashHeight - gs_sash_width,
									_subSashWidth - gs_sash_width,	gs_sash_width

									prism	nsp/2,	gs_glass_thk,	get(nsp)
							del 1
						del 1
					del 1
				del 1

				del	3
					
			endif

		del 1
	del	1


	!----------------------------------------------------------------------------------------------
	!	Opening - Door
	!----------------------------------------------------------------------------------------------




del	top



!======================================================================================================
end
!======================================================================================================


!----------------------------------------------------------------------------------------------
"SashFrame"	:	!	SashFrame
!----------------------------------------------------------------------------------------------
	pen			gs_sash_pen
	material	gs_sash_mat
	sect_fill	iWindow_fill_type,	iWindow_back_pen,	iWindow_fill_pen,	gs_sash_pen

	if	iOpening_type = Type_FixedGlass or iOpening_type = Type_Frameless	then
		group	"SashOutline"
			sect_fill	iWindow_fill_type,	iWindow_back_pen,	iWindow_fill_pen,	gs_sash_pen
			for	i = 1	to	iCoordinate_num
				put	mOpening_Coordinate[i][1],	mOpening_Coordinate[i][2],	15
			next i

			prism_	nsp/3, 	gs_sash_thk,	get(nsp)
		endgroup

		group	"SashInline"
			for	i = 1	to	iCoordinate_num
				put	mOpening_Coordinate[i][1] + sashPosXtmp[i],	mOpening_Coordinate[i][2] + sashPosYtmp[i],	15
			next i

			prism_	nsp/3,	gs_sash_thk,	get(nsp)
		endgroup

		if	iOpening_type = Type_FixedGlass	then
			SashShape = subgroup("SashOutline",	"SashInline")
			placegroup SashShape
		endif
	else
		add	mOpening_Coordinate[1][1],	mOpening_Coordinate[1][2],	0
			put	0,								0,								15,
				0,								mOpeningHeight,					15,
				mOpeningWidth,					mOpeningHeight,					15,
				mOpeningWidth,					0,								15,
				0,								0,								-1,
				gs_sash_width,					gs_sash_width,					15,
				gs_sash_width,					mOpeningHeight - gs_sash_width,	15,
				mOpeningWidth - gs_sash_width,	mOpeningHeight - gs_sash_width,	15,
				mOpeningWidth - gs_sash_width,	gs_sash_width,					15,
				gs_sash_width,					gs_sash_width,					-1

				prism_	nsp/3,	gs_sash_thk,	get(nsp)
		del 1
	endif

return


!----------------------------------------------------------------------------------------------
"Window"	:	!	Window
!----------------------------------------------------------------------------------------------
	pen			gs_glass_pen
	material	gs_glass_mat
	sect_fill	iWindow_fill_type,	iWindow_back_pen,	iWindow_fill_pen,	gs_glass_pen


	addz	(gs_sash_thk - gs_glass_thk)/2
		if	iOpening_type = Type_FixedGlass	then
			for	i = 1	to	iCoordinate_num
				put	mOpening_Coordinate[i][1] + sashPosXtmp[i],	mOpening_Coordinate[i][2] + sashPosYtmp[i]
			next i
		endif
		if	iOpening_type = Type_Frameless	then
			for	i = 1	to	iCoordinate_num
				put	mOpening_Coordinate[i][1],	mOpening_Coordinate[i][2]
			next i
		endif

		prism	nsp/2,	gs_glass_thk,	get(nsp)
	del 1


return



!----------------------------------------------------------------------------------------------
"Opening_index"	:	
!----------------------------------------------------------------------------------------------

	pen			iText_pen
	material	iText_mat
	mTextT = 0.002

	if	iSymbol_mirrored = 0	then	
		addz	-mTextT
		mulx	-1
	else
		addz	-mTextT
		mulx	1
	endif		
		text	mTextT, 0, iOpening_index
	del	2

return


