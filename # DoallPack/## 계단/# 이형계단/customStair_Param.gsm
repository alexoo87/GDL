!===============================================================================================
!	이형 계단
!===============================================================================================


!===============================================================================================
!	변수 정의
!===============================================================================================

!	계단 높이 산정 방법
!-----------------------------------------------------------------------------------------------
values{2}	"iCalcHgt"	Calc_Rsr_nRsr,	stCalcHgt[Calc_Rsr_nRsr],
						Calc_Hgt_nRsr,	stCalcHgt[Calc_Hgt_nRsr]

	if	iCalcHgt = Calc_Rsr_nRsr	then
		lock	"zzyzx"

		!	Height 계산
		_strHgt = 0
		_strHgt = strRsr*(nRsr1 + nRsr2)

		parameters	zzyzx = _strHgt
	endif

	if	iCalcHgt = Calc_Hgt_nRsr	then
		lock	"strRsr"

		!	Riser 계산
		_strRsr = 0
		_strRsr = zzyzx/(nRsr1 + nRsr2)

		parameters	strRsr = _strRsr
	endif


!	층 보이기 설정
!-----------------------------------------------------------------------------------------------
values{2}	"iWrkFlr"	View_Cut,		stView[View_Cut],
						View_Entire,	stView[View_Entire],
						View_None,		stView[View_None]

if	iWrkFlr # View_Cut	then
	lock	"bWrkBrk", "wrkBrkLct"
endif

values{2}	"iUprFlr"	View_Cut,		stView[View_Cut],
						View_Entire,	stView[View_Entire],
						View_None,		stView[View_None]

if	iUprFlr # View_Cut	then
	lock	"bUprBrk", "uprBrkLct"
endif

!	Offset Location
!-----------------------------------------------------------------------------------------------
values{2}	"iOffsetL"	Point_Off,		stOffset[Point_Off],
						Point_End,		stOffset[Point_End]

values{2}	"iOffsetR"	Point_Off,		stOffset[Point_Off],
						Point_Start,	stOffset[Point_Start]

values	"xOffsetL"	range	[-strWell,	]
values	"xOffsetR"	range	[-strWell,	]

if	iOffsetL = Point_End	then	lock	"iOffsetR"
if	iOffsetR = Point_Start	then	lock	"iOffsetL"


!	평면치수
!-------------------------------------------------------------------------------------------
values{2}	"iDimPlan_Wrk"	DimPlan_Off,	stDimPlan[DimPlan_Off],
							DimPlan_On,		stDimPlan[DimPlan_On],
							DimPlan_MVO,	stDimPlan[DimPlan_MVO]

values{2}	"iDimPlan_Upr"	DimPlan_Off,	stDimPlan[DimPlan_Off],
							DimPlan_On,		stDimPlan[DimPlan_On],
							DimPlan_MVO,	stDimPlan[DimPlan_MVO]

!	평면 치수 위치
!-----------------------------------------------------------------------------------------------
values{2}	"iDimLct_Wrk"	DimLct_1st,		stDimLct[DimLct_1st],
							DimLct_2nd,		stDimLct[DimLct_2nd],
							DimLct_Both,	stDimLct[DimLct_Both]

values{2}	"iDimLct_Upr"	DimLct_1st,		stDimLct[DimLct_1st],
							DimLct_2nd,		stDimLct[DimLct_2nd],
							DimLct_Both,	stDimLct[DimLct_Both]

values	"dimOffset_WrkL"	range	[0,	]
values	"dimWitness_WrkL"	range	[0,	dimOffset_WrkL)
values	"dimOffset_WrkR"	range	[0,	]
values	"dimWitness_WrkR"	range	[0,	dimOffset_WrkR)

values	"dimOffset_UprL"	range	[0,	]
values	"dimWitness_UprL"	range	[0,	dimOffset_UprL)
values	"dimOffset_UprR"	range	[0,	]
values	"dimWitness_UprR"	range	[0,	dimOffset_UprR)

values	"dimCircle"		range	[0,	0.100]

values	"dimTxtSize"	range	[0,	]

if	iDimPlan_Wrk = DimPlan_Off	then
	lock	"dimOffset_WrkL", "dimWitness_WrkL", "dimOffset_WrkR", "dimWitness_WrkR", "iDimLct_Wrk"
else
	if	iDimLct_Wrk = DimLct_1st	then
		lock	"dimOffset_WrkR", "dimWitness_WrkR"
	endif
	if	iDimLct_Wrk = DimLct_2nd	then
		lock	"dimOffset_WrkL", "dimWitness_WrkL"
	endif
endif


if	iDimPlan_Upr = DimPlan_Off	then
	lock	"dimOffset_UprL", "dimWitness_UprL", "dimOffset_UprR", "dimWitness_UprR", "iDimLct_Upr"
else
	if	iDimLct_Upr = DimLct_1st	then
		lock	"dimOffset_UprR", "dimWitness_UprR"
	endif
	if	iDimLct_Upr = DimLct_2nd	then
		lock	"dimOffset_UprL", "dimWitness_UprL"
	endif
endif

if	iDimPlan_Wrk = DimPlan_Off and iDimPlan_Upr = DimPlan_Off	then
	lock	"dimCircle", "dimTextSize", "bViewScale"
	parameters	bViewScale = 0
endif

if	not(bViewScale)	then
	lock			"iViewScale"
	hideparameter	"iViewScale"
endif

!	기본 설정
!-----------------------------------------------------------------------------------------------
values	"strWdtL"	range	(0,	)
values	"strWdtR"	range	(0,	)

values	"strTrd"	range	(0,	)
values	"strThk"	range	(0,	)

values	"strOff1"	range	[0,	]
values	"strOff2"	range	[0,	]

values	"strWell"	range	[0,	]

values	"nRsr1"	range	[3,	]
values	"nRsr2"	range	[3,	]

values	"lndWdt"	range	(0,	]
values	"lndThk"	range	(0,	strRsr + strThk/cos(_strAng)]

values	"bLndThk"	range	(0,	)


!	마감재
!-----------------------------------------------------------------------------------------------
if	not(bFns)	then
	lock	"hFnsThk", "vFnsThk", "fnsNosing", "bFnsThk", "uFnsThk", "basThk"
endif

values	"hFnsThk"	range	(0,	)
values	"vFnsThk"	range	(0,	)
values	"fnsNosing"	range	[0,	)
values	"bFnsThk"	range	[0,	)
values	"uFnsThk"	range	[0,	)
values	"basThk"	range	[0,	)

!	Break Line
!-----------------------------------------------------------------------------------------------
values	"wrkBrkLct"	range	[strTrd*2,	strTrd*(nRsr1 - 3)]
values	"uprBrkLct"	range	[strTrd*2,	strTrd*(nRsr1 - 3)]

!	Handrail
!-----------------------------------------------------------------------------------------------
if	not(bHnd_Out)	then
	lock	"hndOff_Out", "hndWrk_Out", "hndUpr_Out"
endif
if	not(bHnd_In)	then
	lock	"hndOff_Stw",	"hndOff_In", "hndWrk_In", "hndUpr_In", "hndUpr_In_Top"
endif

values{2}	"iRailSect"	RailSect_Line,	stRailSect[RailSect_Line],
						RailSect_3D,	stRailSect[RailSect_3D],
						RailSect_MVO,	stRailSect[RailSect_MVO]

values	"hndRd"			range	(0,	0.100)
values	"hndOff_Out"	range	(hndRd,	0.100]
values	"hndOff_In"		range	(hndRd,	0.100]
values	"hndOff_Stw"	range	(hndRd,	)

values	"hndWrk_Out"	range	(hndRd,	]
values	"hndWrk_In"		range	(hndRd,	]

values	"hndUpr_Out"	range	(hndRd,	]
values	"hndUpr_In"		range	(hndRd,	]

values	"hndHgt"	range	(0,	)


!	Text
!-----------------------------------------------------------------------------------------------
dim	fontnames[]
r = request("FONTNAMES_LIST", "", fontnames)
values	"stFontType"	fontnames

values	"textSize"	range	(0,	)

values	"textLct1"	range	[0,	]
values	"textLct2"	range	[0,	]