!===============================================================================================
!	에스컬레이터
!===============================================================================================
!	W.P
hotspot2	0,	0,	unID	:	unID = unID + 1
! circle2	0,	0,	0.05
! circle2	0,	0,	0.1

_escLth = escHgt/tan(aEsc)
! line2	0,	0,	_escLth,	0
add2	_escLth,	0
	hotspot2	0,	0,	unID	:	unID = unID + 1
	! circle2	0,	0,	0.05
	! circle2	0,	0,	0.1
del 1

!	난간 너비
_balustradeWdt = (escWdt - stepWdt)/2

!	텍스트
define style	"style_Wrk"	stFontType,	txtSize,	8,	0
define style	"style_Upr"	stFontType,	txtSize,	8,	0

define style	"style_WorkingPoint"	stFontType,	txtSize,	1,	0

	r = request("Height_of_style",	"style_Wrk",	_textHgt,	_descent,	_leading)
	_yPosTxt_Wrk = txtSize/2 + _descent + _leading
	_yPosTxt_Wrk = _yPosTxt_Wrk/1000*100

	r = request("Height_of_style",	"style_Upr",	_textHgt,	_descent,	_leading)
	_yPosTxt_Upr = txtSize/2 + _descent + _leading
	_yPosTxt_Upr = _yPosTxt_Upr/1000*100

!	Fill
fillPen = 1
backPen = 0

! project2	3,	270,	3


!===============================================================================================
!	Hotspot
!===============================================================================================
!	에스컬레이터 너비
add2	-lowLandLth,	0
	hotspot2	0,	0,				unID,	escWdt_Half,	1+128,	escWdt	:	unID = unID + 1
	hotspot2	0,	-1,				unID,	escWdt_Half,	3				:	unID = unID + 1
	hotspot2	0,	escWdt_Half,	unID,	escWdt_Half,	2,	escWdt		:	unID = unID + 1

	hotspot2	0,	0,				unID,	escWdt_Half,	1+128,	escWdt	:	unID = unID + 1
	hotspot2	0,	1,				unID,	escWdt_Half,	3				:	unID = unID + 1
	hotspot2	0,	-escWdt_Half,	unID,	escWdt_Half,	2,	escWdt		:	unID = unID + 1
del 1

!	하부 승강장 너비
hotspot2	0,				0,	unID,	lowLandLth,	1+128	:	unID = unID + 1
hotspot2	1,				0,	unID,	lowLandLth,	3		:	unID = unID + 1
hotspot2	-lowLandLth,	0,	unID,	lowLandLth,	2		:	unID = unID + 1

!	상부 승강장 너비
add2	_escLth,	0
	hotspot2	0,			0,	unID,	uprLandLth,	1+128	:	unID = unID + 1
	hotspot2	-1,			0,	unID,	uprLandLth,	3		:	unID = unID + 1
	hotspot2	uprLandLth,	0,	unID,	uprLandLth,	2		:	unID = unID + 1
del 1

!	난간 위치
add2	-stepLth*(nLandStep + 1) - addHnd_Low,	0
	add2	0,	escWdt_Half - _balustradeWdt/2
		hotspot2	0,	0,		unID,	hndLct,	1+128	:	unID = unID + 1
		hotspot2	0,	-1,		unID,	hndLct,	3		:	unID = unID + 1
		hotspot2	0,	hndLct,	unID,	hndLct,	2		:	unID = unID + 1
	del 1
del 1

!	하부 난간 연장 길이
add2	-stepLth*(nLandStep + 1),	0
	add2	0,	escWdt_Half - _balustradeWdt
		hotspot2	0,				0,	unID,	addHnd_Low,	1+128	:	unID = unID + 1
		hotspot2	1,				0,	unID,	addHnd_Low,	3		:	unID = unID + 1
		hotspot2	-addHnd_Low,	0,	unID,	addHnd_Low,	2		:	unID = unID + 1
	del 1
del 1

!	상부 난간 연장 길이
add2	_escLth + stepLth*(nLandStep + 1),	0
	add2	0,	escWdt_Half - _balustradeWdt
		hotspot2	0,			0,	unID,	addHnd_Upr,	1+128	:	unID = unID + 1
		hotspot2	-1,			0,	unID,	addHnd_Upr,	3		:	unID = unID + 1
		hotspot2	addHnd_Upr,	0,	unID,	addHnd_Upr,	2		:	unID = unID + 1
	del 1
del 1


!===============================================================================================
!	작업층
!===============================================================================================
if	GLOB_CH_STORY_DIST = 0	then
	!-----------------------------------------------------------------------------------------------
	!	Off
	!-----------------------------------------------------------------------------------------------
	if	iWrkFlr = VIEW_OFF	then
		!	외곽선
		!-----------------------------------------------------------------------------------------------
		pen		escPen
		fill	65

		_si = 0
		gosub	"coorEntire"

		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))
	endif

	!-----------------------------------------------------------------------------------------------
	!	Cut
	!-----------------------------------------------------------------------------------------------
	if	iWrkFlr = VIEW_CUT	then
		!	외곽선
		!-----------------------------------------------------------------------------------------------
		pen		escPen
		fill	65

		gosub	"coorCut_Wrk"

		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	Break Line
		!-----------------------------------------------------------------------------------------------
		hotspot2	0,			0,	unID,	wrkBrkLct,	1+128	:	unID = unID + 1
		hotspot2	-1,			0,	unID,	wrkBrkLct,	3		:	unID = unID + 1
		hotspot2	wrkBrkLct,	0,	unID,	wrkBrkLct,	2		:	unID = unID + 1

		add2	wrkBrkLct,	0
			gosub	"hsp_CutAngle_Wrk"
		del 1

		!	난간_스커트
		!-----------------------------------------------------------------------------------------------
		pen	hndPen

		put	-stepLth*(nLandStep + 1) - addHnd_Low,					escWdt/2,											1,
			-stepLth*(nLandStep + 1) - addHnd_Low,					escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	0,
			-stepLth*(nLandStep + 1) - addHnd_Low,					escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
			-stepLth*(nLandStep + 1) - addHnd_Low,					escWdt/2 - _balustradeWdt,							1,
			wrkBrkLct - (escWdt/2 - _balustradeWdt)*tan(aWrkBrk),	escWdt/2 - _balustradeWdt,							0,
			wrkBrkLct - (escWdt/2)*tan(aWrkBrk),					escWdt/2,											0

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		put	-stepLth*(nLandStep + 1) - addHnd_Low,					-escWdt/2,											1,
			-stepLth*(nLandStep + 1) - addHnd_Low,					-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	0,
			-stepLth*(nLandStep + 1) - addHnd_Low,					-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
			-stepLth*(nLandStep + 1) - addHnd_Low,					-(escWdt/2 - _balustradeWdt),						1,
			wrkBrkLct + (escWdt/2 - _balustradeWdt)*tan(aWrkBrk),	-(escWdt/2 - _balustradeWdt),						0,
			wrkBrkLct + (escWdt/2)*tan(aWrkBrk),					-escWdt/2,											0

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	난간
		!-----------------------------------------------------------------------------------------------
		pen	hndPen

		_rHnd = (hndHgt - sktHgt/2 + hndThk*0.5)/2

		put	-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,								escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
			-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,								escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
			wrkBrkLct - (escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct)*tan(aWrkBrk),	escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	0,
			wrkBrkLct - (escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct)*tan(aWrkBrk),	escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
			-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,								escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		put	-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,								-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
			-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,								-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
			wrkBrkLct + (escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct)*tan(aWrkBrk),	-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	0,
			wrkBrkLct + (escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct)*tan(aWrkBrk),	-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
			-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,								-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	디딤판
		!-----------------------------------------------------------------------------------------------
		pen	escPen

		add2	-stepLth*nLandStep,	0
			line2	0,	stepWdt/2,	0,	-stepWdt/2
		del 1

			pen	stepPen
			if	wrkBrkLct > eps	then
				!	하부
				for	i = 1	to	nLandStep
					line2	0,	stepWdt/2,	0,	-stepWdt/2

					add2	-stepLth,	0
				next	i

				del nLandStep

				!	사이
				_prjStepLth = stepLth - stepLth*(1 - cos(aEsc))
				_minRange = wrkBrkLct - abs((stepWdt/2)*tan(aWrkBrk))
				_maxRange = wrkBrkLct + abs((stepWdt/2)*tan(aWrkBrk))

				_nMinStep = int(_minRange/_prjStepLth)
				_nMaxStep = int(_maxRange/_prjStepLth)
				_nBtwStep = abs(_nMaxStep - _nMinStep)

				for	i = 1	to	_nMinStep
					add2	_prjStepLth,	0

					line2	0,	stepWdt/2,	0,	-stepWdt/2
				next	i

				del _nMinStep

				add2	_prjStepLth*_nMinStep,	0
					for	i = 1	to	_nBtwStep
						add2	_prjStepLth,	0

						if	aWrkBrk > -eps	then
							_yPosLine = (wrkBrkLct - _prjStepLth*(_nMinStep + i))/tan(aWrkBrk)
							line2	0,	_yPosLine,	0,	-stepWdt/2
						else
							_yPosLine = (wrkBrkLct - _prjStepLth*(_nMinStep + i))/tan(aWrkBrk)
							line2	0,	stepWdt/2,	0,	_yPosLine
						endif
					next	i

					del _nBtwStep
				del 1
			else
				_nLandStep_Wrk = int((stepLth*nLandStep + wrkBrkLct)/stepLth)

				if	_nLandStep_Wrk > eps	then
					add2	-stepLth*nLandStep,	0
						for	i = 1	to	_nLandStep_Wrk
							add2	stepLth,	0
							
							line2	0,	stepWdt/2,	0,	-stepWdt/2
						next	i
						del _nLandStep_Wrk
					del 1
				endif

			endif

		!	화살표
		!-----------------------------------------------------------------------------------------------
		pen	etcPen

		line2	-stepLth*nLandStep,	0,	wrkBrkLct,	0

		if	iDirect = DIRECT_UP	then
			_status = 1
			_viewType = 1

			add2	-stepLth*nLandStep,	0
				circle2	0,	0,	0.075
			del 1

			add2	wrkBrkLct,	0
				gosub	"arrow"
			del 1
		endif

		if	iDirect = DIRECT_DOWN	then
			_status = -1
			_viewType = 2

			add2	-stepLth*nLandStep,	0
				gosub	"arrow"
			del 1
		endif

		!	Working Point
		!-----------------------------------------------------------------------------------------------
		gosub	"workingPoint"

		!	Text
		!-----------------------------------------------------------------------------------------------
		if	iDirect = DIRECT_UP	then
			gosub	"text_Wrk"
		endif
	endif

	!-----------------------------------------------------------------------------------------------
	!	Entire
	!-----------------------------------------------------------------------------------------------
	if	iWrkFlr = VIEW_ENTIRE	then
		!	외곽선
		!-----------------------------------------------------------------------------------------------
		pen		escPen
		fill	65

		_si = 1
		gosub	"coorEntire"

		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	난간 + 스커트
		!-----------------------------------------------------------------------------------------------
		gosub	"entire_Hnd"

		!	디딤판
		!-----------------------------------------------------------------------------------------------
		gosub	"entire_Step"

		!	화살표
		!-----------------------------------------------------------------------------------------------
		gosub	"entire_Arrow"

		!	Working Point
		!-----------------------------------------------------------------------------------------------
		gosub	"workingPoint"

		add2	_escLth,	0
			gosub	"workingPoint"
		del 1

		!	Text
		!-----------------------------------------------------------------------------------------------
		if	iDirect = DIRECT_UP	then
			gosub	"text_Wrk"
		endif
	endif
endif



!===============================================================================================
!	상부층
!===============================================================================================
if	GLOB_CH_STORY_DIST > eps	then
	!-----------------------------------------------------------------------------------------------
	!	Off
	!-----------------------------------------------------------------------------------------------
	if	iUprFlr = VIEW_OFF	then
		!	외곽선
		!-----------------------------------------------------------------------------------------------
		pen		escPen
		fill	65

		_si = 0
		gosub	"coorEntire"

		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))
	endif

	!-----------------------------------------------------------------------------------------------
	!	Cut
	!-----------------------------------------------------------------------------------------------
	if	iUprFlr = VIEW_CUT	then
		!	외곽선
		!-----------------------------------------------------------------------------------------------
		pen		escPen
		fill	65

		gosub	"coorCut_Upr"

		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	Break Line
		!-----------------------------------------------------------------------------------------------
		hotspot2	0,			0,	unID,	uprBrkLct,	1+128	:	unID = unID + 1
		hotspot2	-1,			0,	unID,	uprBrkLct,	3		:	unID = unID + 1
		hotspot2	uprBrkLct,	0,	unID,	uprBrkLct,	2		:	unID = unID + 1

		add2	uprBrkLct,	0
			gosub	"hsp_CutAngle_Upr"
		del 1

		!	난간_스커트
		!-----------------------------------------------------------------------------------------------
		pen	hndPen

		put	_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			escWdt/2,											1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	0,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			escWdt/2 - _balustradeWdt,							1,
			uprBrkLct - (escWdt/2 - _balustradeWdt)*tan(aUprBrk),	escWdt/2 - _balustradeWdt,							0,
			uprBrkLct - (escWdt/2)*tan(aUprBrk),					escWdt/2,											0

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		put	_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			-escWdt/2,											1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	0,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,			-(escWdt/2 - _balustradeWdt),						1,
			uprBrkLct + (escWdt/2 - _balustradeWdt)*tan(aUprBrk),	-(escWdt/2 - _balustradeWdt),						0,
			uprBrkLct + (escWdt/2)*tan(aUprBrk),					-escWdt/2,											0

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	난간
		!-----------------------------------------------------------------------------------------------
		pen	hndPen

		_rHnd = (hndHgt - sktHgt/2 + hndThk*0.5)/2

		put	_escLth + stepLth*(nLandStep + 1) + addHnd_Upr + _rHnd,						escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr + _rHnd,						escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
			uprBrkLct - (escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct)*tan(aUprBrk),	escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	0,
			uprBrkLct - (escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct)*tan(aUprBrk),	escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr + _rHnd,						escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		put	_escLth + stepLth*(nLandStep + 1) + addHnd_Upr + _rHnd,						-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr + _rHnd,						-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
			uprBrkLct + (escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct)*tan(aUprBrk),	-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	0,
			uprBrkLct + (escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct)*tan(aUprBrk),	-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
			_escLth + stepLth*(nLandStep + 1) + addHnd_Upr + _rHnd,						-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1

			poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

			!	Hotline
			for	h = 1	to	(nsp/3) - 2
				hotline2	get(2) + (use(1) - get(1)),	use(2)
			next	h
				hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	디딤판
		!-----------------------------------------------------------------------------------------------
			pen	stepPen

			_prjStepLth = stepLth - stepLth*(1 - cos(aEsc))
			_nStep = int(escHgt/stepHgt)

			if	uprBrkLct > eps	then
				!	사이
				_minRange = uprBrkLct - abs((stepWdt/2)*tan(aUprBrk))
				_maxRange = uprBrkLct + abs((stepWdt/2)*tan(aUprBrk))

				_nMinStep = int(_minRange/_prjStepLth)
				_nMaxStep = int(_maxRange/_prjStepLth)
				_nBtwStep = abs(_nMaxStep - _nMinStep)

				add2	_prjStepLth*_nMinStep,	0
					for	i = 1	to	_nBtwStep
						add2	_prjStepLth,	0

						if	aUprBrk > -eps	then
							_yPosLine = (uprBrkLct - _prjStepLth*(_nMinStep + i))/tan(aUprBrk)
							line2	0,	stepWdt/2,	0,	_yPosLine
						else
							_yPosLine = (uprBrkLct - _prjStepLth*(_nMinStep + i))/tan(aUprBrk)
							line2	0,	_yPosLine,	0,	-stepWdt/2
						endif
					next	i

					del _nBtwStep
				del 1

				add2	_prjStepLth*(_nMinStep + _nBtwStep),	0
					for	i = 1	to	_nStep - (_nMinStep + _nBtwStep)
						add2	_prjStepLth,	0

						line2	0,	stepWdt/2,	0,	-stepWdt/2
					next	i

					del _nStep
				del 1
			else
				!	하부
				_nLandStep_Upr = int(abs(uprBrkLct)/stepLth)

				if	_nLandStep_Upr > eps	then
					for	i = 1	to	_nLandStep_Upr
						add2	-stepLth,	0

						line2	0,	stepWdt/2,	0,	-stepWdt/2
					next	i

					del _nLandStep_Upr
				endif

				!	사이
				for	i = 1	to	(_nStep + 1)
					line2	0,	stepWdt/2,	0,	-stepWdt/2

					add2	_prjStepLth,	0
				next	i

				del (_nStep + 1)
			endif

			!	상부
			_distHgt = stepHgt - (escHgt - stepHgt*_nStep)
			_xDistStep = stepLth - sqr(stepLth^2 - (stepHgt - _distHgt)^2)

			add2	_prjStepLth*_nStep + stepLth - _xDistStep,	0
				for	i = 1	to	nLandStep
					line2	0,	stepWdt/2,	0,	-stepWdt/2

					add2	stepLth,	0
				next	i

				del nLandStep
			del 1

		pen	escPen

		add2	_escLth + stepLth*nLandStep,	0
			line2	0,	stepWdt/2,	0,	-stepWdt/2
		del 1

		!	화살표
		!-----------------------------------------------------------------------------------------------
		pen	etcPen

		line2	uprBrkLct,	0,	_escLth + stepLth*nLandStep,	0

		if	iDirect = DIRECT_UP	then
			_status = 1
			_viewType = 2

			add2	_escLth + stepLth*nLandStep,	0
				gosub	"arrow"
			del 1
		endif

		if	iDirect = DIRECT_DOWN	then
			_status = -1
			_viewType = 1

			add2	_escLth + stepLth*nLandStep,	0
				circle2	0,	0,	0.075
			del 1

			add2	uprBrkLct,	0
				gosub	"arrow"
			del 1
		endif

		!	Working Point
		!-----------------------------------------------------------------------------------------------
		add2	_escLth,	0
			gosub	"workingPoint"
		del 1

		!	Text
		!-----------------------------------------------------------------------------------------------
		if	iDirect = DIRECT_DOWN	then
			gosub	"text_Upr"
		endif
	endif

	!-----------------------------------------------------------------------------------------------
	!	Entire
	!-----------------------------------------------------------------------------------------------
	if	iUprFlr = VIEW_ENTIRE	then
		!	외곽선
		!-----------------------------------------------------------------------------------------------
		pen		escPen
		fill	65

		_si = 1
		gosub	"coorEntire"

		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

		!	난간 + 스커트
		!-----------------------------------------------------------------------------------------------
		gosub	"entire_Hnd"

		!	디딤판
		!-----------------------------------------------------------------------------------------------
		gosub	"entire_Step"

		!	화살표
		!-----------------------------------------------------------------------------------------------
		gosub	"entire_Arrow"

		!	Working Point
		!-----------------------------------------------------------------------------------------------
		gosub	"workingPoint"

		add2	_escLth,	0
			gosub	"workingPoint"
		del 1

		!	Text
		!-----------------------------------------------------------------------------------------------
		if	iDirect = DIRECT_DOWN	then
			gosub	"text_Upr"
		endif
	endif
endif



end


!-----------------------------------------------------------------------------------------------
"coorEntire":	!	전체 좌표 추출
!-----------------------------------------------------------------------------------------------
	put	-lowLandLth,			escWdt/2,	_si,
		_escLth + uprLandLth,	escWdt/2,	_si,
		_escLth + uprLandLth,	-escWdt/2,	_si,
		-lowLandLth,			-escWdt/2,	_si,
		-lowLandLth,			escWdt/2,	_si

return

!-----------------------------------------------------------------------------------------------
"coorCut_Wrk":	!	작업층 Cut 좌표
!-----------------------------------------------------------------------------------------------
	put	-lowLandLth,						escWdt/2,	1,
		wrkBrkLct - (escWdt/2)*tan(aWrkBrk),	escWdt/2,	0,
		wrkBrkLct + (escWdt/2)*tan(aWrkBrk),	-escWdt/2,	1,
		-lowLandLth,						-escWdt/2,	1,
		-lowLandLth,						escWdt/2,	1

return

!-----------------------------------------------------------------------------------------------
"coorCut_Upr":	!	작업층 Cut 좌표
!-----------------------------------------------------------------------------------------------
	put	uprBrkLct - (escWdt/2)*tan(aUprBrk),	escWdt/2,	1,
		_escLth + uprLandLth,					escWdt/2,	1,
		_escLth + uprLandLth,					-escWdt/2,	1,
		uprBrkLct + (escWdt/2)*tan(aUprBrk),	-escWdt/2,	0,
		uprBrkLct - (escWdt/2)*tan(aUprBrk),	escWdt/2,	1

return

!-----------------------------------------------------------------------------------------------
"hsp_CutAngle_Wrk":	!	Cut 각도
!-----------------------------------------------------------------------------------------------
	_rHsp = 0.250
	rot2	90
		hotspot2	_rHsp,				0,					unID,	aWrkBrk,	4+128	:	unID = unID + 1
		hotspot2	_rHsp*cos(aWrkBrk),	_rHsp*sin(aWrkBrk),	unID,	aWrkBrk,	5		:	unID = unID + 1
		hotspot2	0,					0,					unID,	aWrkBrk,	6		:	unID = unID + 1
	del 1

return

!-----------------------------------------------------------------------------------------------
"hsp_CutAngle_Upr":	!	Cut 각도
!-----------------------------------------------------------------------------------------------
	_rHsp = 0.250
	rot2	90
		hotspot2	_rHsp,				0,					unID,	aUprBrk,	4+128	:	unID = unID + 1
		hotspot2	_rHsp*cos(aUprBrk),	_rHsp*sin(aUprBrk),	unID,	aUprBrk,	5		:	unID = unID + 1
		hotspot2	0,					0,					unID,	aUprBrk,	6		:	unID = unID + 1
	del 1

return

!-----------------------------------------------------------------------------------------------
"entire_Hnd":	!	난간(전체)
!-----------------------------------------------------------------------------------------------
	!	난간_스커트
	!-----------------------------------------------------------------------------------------------
	pen	hndPen

	put	-stepLth*(nLandStep + 1) - addHnd_Low,			escWdt/2,											1,
		-stepLth*(nLandStep + 1) - addHnd_Low,			escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	0,
		-stepLth*(nLandStep + 1) - addHnd_Low,			escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
		-stepLth*(nLandStep + 1) - addHnd_Low,			escWdt/2 - _balustradeWdt,							1,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	escWdt/2 - _balustradeWdt,							1,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	0,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	escWdt/2,											0

		poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))


	put	-stepLth*(nLandStep + 1) - addHnd_Low,			-escWdt/2,											1,
		-stepLth*(nLandStep + 1) - addHnd_Low,			-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	0,
		-stepLth*(nLandStep + 1) - addHnd_Low,			-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
		-stepLth*(nLandStep + 1) - addHnd_Low,			-(escWdt/2 - _balustradeWdt),						1,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	-(escWdt/2 - _balustradeWdt),						1,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	0,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
		_escLth + stepLth*(nLandStep + 1) + addHnd_Upr,	-escWdt/2,											0

		poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

	!	난간
	!-----------------------------------------------------------------------------------------------
	pen	hndPen

	_rHnd = (hndHgt - sktHgt/2 + hndThk*0.5)/2

	put	-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,	escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
		-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,	escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
		_escLth + stepLth*(nLandStep + 1) + _rHnd,		escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct,	1,
		_escLth + stepLth*(nLandStep + 1) + _rHnd,		escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1,
		-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,	escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct,	1

		poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

	put	-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,	-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
		-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,	-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
		_escLth + stepLth*(nLandStep + 1) + _rHnd,		-(escWdt/2 - _balustradeWdt/2 - hndWdt/2 + hndLct),	1,
		_escLth + stepLth*(nLandStep + 1) + _rHnd,		-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1,
		-stepLth*(nLandStep + 1) - addHnd_Low - _rHnd,	-(escWdt/2 - _balustradeWdt/2 + hndWdt/2 + hndLct),	1

		poly2_b	nsp/3,	1+4,	fillPen,	backPen,	use(nsp)

		!	Hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))

return

!-----------------------------------------------------------------------------------------------
"entire_Step":	!	디딤판(전체)
!-----------------------------------------------------------------------------------------------
	pen	escPen

	add2	-stepLth*nLandStep,	0
		line2	0,	stepWdt/2,	0,	-stepWdt/2
	del 1

		pen	stepPen
		!	하부
		for	i = 1	to	nLandStep
			line2	0,	stepWdt/2,	0,	-stepWdt/2

			add2	-stepLth,	0
		next	i

		del nLandStep

		!	사이
		_nStep = int(escHgt/stepHgt)
		_prjStepLth = stepLth - stepLth*(1 - cos(aEsc))

		for	i = 1	to	_nStep
			add2	_prjStepLth,	0

			line2	0,	stepWdt/2,	0,	-stepWdt/2
		next	i

		del _nStep

		!	상부
		_distHgt = stepHgt - (escHgt - stepHgt*_nStep)
		_xDistStep = stepLth - sqr(stepLth^2 - (stepHgt - _distHgt)^2)

		add2	_prjStepLth*_nStep + stepLth - _xDistStep,	0
			for	i = 1	to	nLandStep
				line2	0,	stepWdt/2,	0,	-stepWdt/2

				add2	stepLth,	0
			next	i

			del nLandStep
		del 1

	pen	escPen

	add2	_escLth + stepLth*nLandStep,	0
		line2	0,	stepWdt/2,	0,	-stepWdt/2
	del 1

return

!-----------------------------------------------------------------------------------------------
"entire_Arrow":	!	화살표(전체)
!-----------------------------------------------------------------------------------------------
	pen	etcPen

	line2	-stepLth*nLandStep,	0,	_escLth + stepLth*nLandStep,	0

	if	iDirect = DIRECT_UP	then
		_status = 1
		_viewType = 2

		add2	-stepLth*nLandStep,	0
			circle2	0,	0,	0.075
		del 1

		add2	_escLth + stepLth*nLandStep,	0
			gosub	"arrow"
		del 1
	endif

	if	iDirect = DIRECT_DOWN	then
		_status = -1
		_viewType = 2

		add2	_escLth + stepLth*nLandStep,	0
			circle2	0,	0,	0.075
		del 1

		add2	-stepLth*nLandStep,	0
			gosub	"arrow"
		del 1
	endif

return

!-----------------------------------------------------------------------------------------------
"arrow":	!	화살표
!-----------------------------------------------------------------------------------------------
	if	GLOB_CH_STORY_DIST = 0	then
		_aBrk = aWrkBrk
	endif
	if	GLOB_CH_STORY_DIST > eps	then
		_aBrk = aUprBrk
	endif

	mul2	_status,	1
		if	_viewType = 1	then
			if	abs(_aBrk) - 21.8 > eps	then
				_aArrow = abs(_aBrk)
			else
				_aArrow = 21.8
			endif
		else
			_aArrow = 21.8
		endif

		_xPosArrow = 0.120*tan(_aArrow)
		_arrowThk = 0.040

		put	0,										0,
			-_xPosArrow,							0.120,
			-(_xPosArrow + _arrowThk*cos(_aArrow)),	0.120 - _arrowThk*sin(_aArrow),
			-_arrowThk/cos(_aArrow),				0,
			-(_xPosArrow + _arrowThk*cos(_aArrow)),	-(0.120 - _arrowThk*sin(_aArrow)),
			-_xPosArrow,							-0.120,
			0,										0


		! put	-0.040,	0,
		! 	-0.100,	0.100,
		! 	-0.070, 0.120,
		! 	0,		0,
		! 	-0.070,	-0.120,
		! 	-0.100,	-0.100,
		! 	-0.040,	0

		poly2	nsp/2,	1,	get(nsp)
	del 1

return

!-----------------------------------------------------------------------------------------------
"workingPoint":	!	W.P
!-----------------------------------------------------------------------------------------------
	pen	workingPointPen

	if	bWorkingPoint	then
		!	Shape
		_rWorkingPoint = 0.100
		circle2	0,	0,	_rWorkingPoint

		line2	-_rWorkingPoint,	0,	_rWorkingPoint,	0
		line2	0,	_rWorkingPoint,	0,	-_rWorkingPoint

		fill	64

		rot2	90
			for	i = 1	to	2
				rot2	180*(i - 1)
					put	0,				0,	1,
						_rWorkingPoint,	0,	1,
						0,				0,	900,
						_rWorkingPoint,	90,	4000+1

					poly2_b	nsp/3,	2+4,	workingPointPen,	0,	get(nsp)
				del 1
			next	i
		del 1

		!	Text
		add2	_rWorkingPoint,	-_rWorkingPoint*sin(30)
			pen	txtPen
			style	"style_WorkingPoint"

			text2	0,	0,	"W.P."
		del 1

	endif

return

!-----------------------------------------------------------------------------------------------
"text_Wrk":	!	작업층 텍스트
!-----------------------------------------------------------------------------------------------
	style	"style_Wrk"

	if	bTxt	then
		add2	-stepLth*nLandStep,	0
			_hspOffset = 0
			_hspLth = 0.150
			_xEnd_Wrk = lowLandLth - stepLth*nLandStep
			if	abs(wrkTxtLct - _xEnd_Wrk) < eps	then
				_hspOffset = 0.100
			endif

			!	Hotspot
			hotspot2	0,			_hspOffset,	unID,	wrkTxtLct,	1+128	:	unID = unID + 1
			hotspot2	1,			_hspOffset,	unID,	wrkTxtLct,	3		:	unID = unID + 1
			hotspot2	-wrkTxtLct,	_hspOffset,	unID,	wrkTxtLct,	2		:	unID = unID + 1

			add2	-wrkTxtLct,	0
				rot2	-90
					hotspot2	_hspLth,				0,						unID,	aWrkTxt,	4+128	:	unID = unID + 1
					hotspot2	_hspLth*cos(aWrkTxt),	_hspLth*sin(aWrkTxt),	unID,	aWrkTxt,	5		:	unID = unID + 1
					hotspot2	0,						0,						unID,	aWrkTxt,	6		:	unID = unID + 1

					rot2	aWrkTxt
						text2	0,	-_yPosTxt_Wrk,	"UP"
					del 1
				del 1
			del 1
		del 1
	endif

return

!-----------------------------------------------------------------------------------------------
"text_Upr":	!	상부층 텍스트
!-----------------------------------------------------------------------------------------------
	style	"style_Upr"

	if	bTxt	then
		add2	_escLth + stepLth*nLandStep,	0
			_hspOffset = 0
			_hspLth = 0.150
			_xEnd_Upr = uprLandLth - stepLth*nLandStep
			if	abs(uprTxtLct - _xEnd_Upr) < eps	then
				_hspOffset = 0.100
			endif

			!	Hotspot
			hotspot2	0,			_hspOffset,	unID,	uprTxtLct,	1+128	:	unID = unID + 1
			hotspot2	-1,			_hspOffset,	unID,	uprTxtLct,	3		:	unID = unID + 1
			hotspot2	uprTxtLct,	_hspOffset,	unID,	uprTxtLct,	2		:	unID = unID + 1

			add2	uprTxtLct,	0
				rot2	-90
					hotspot2	_hspLth,				0,						unID,	aUprTxt,	4+128	:	unID = unID + 1
					hotspot2	_hspLth*cos(aUprTxt),	_hspLth*sin(aUprTxt),	unID,	aUprTxt,	5		:	unID = unID + 1
					hotspot2	0,						0,						unID,	aUprTxt,	6		:	unID = unID + 1

					rot2	aUprTxt
						text2	0,	-_yPosTxt_Upr,	"DN"
					del 1
				del 1
			del 1
		del 1
	endif

return