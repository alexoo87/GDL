!===============================================================================================
!	곡면 커튼월
!===============================================================================================
! project2	3,	270,	3

!	멀리언 생성 방향
if	iMlnDirect = MlnDirect_RightHand	then	mul2	1,	-1

if	iMlnDirect = MlnDirect_LeftHand		then	_option = 0
if	iMlnDirect = MlnDirect_RightHand	then	_option = 512

!	전체회전
if	iDivision = Division_Length	then
	if	iDirect = Direct_Out	then	_offsetX = 0.050
	if	iDirect = Direct_In		then	_offsetX = -0.050
	!	hotspot
	if	iMlnDirect = MlnDirect_LeftHand	then
		hotspot2	(distWP + _offsetX),				0,									unID,	aRotate,	4+128	:	unID = unID + 1
		hotspot2	(distWP + _offsetX)*cos(aRotate),	(distWP + _offsetX)*sin(aRotate),	unID,	aRotate,	5		:	unID = unID + 1
		hotspot2	0,									0,									unID,	aRotate,	6		:	unID = unID + 1

		rot2	totalAngle
			hotspot2	(distWP + _offsetX),				0,									unID,	aRotate,	4+128	:	unID = unID + 1
			hotspot2	(distWP + _offsetX)*cos(aRotate),	(distWP + _offsetX)*sin(aRotate),	unID,	aRotate,	5		:	unID = unID + 1
			hotspot2	0,									0,									unID,	aRotate,	6		:	unID = unID + 1
		del 1

		rot2	aRotate
	endif

	if	iMlnDirect = MlnDirect_RightHand	then
		hotspot2	(distWP + _offsetX),				0,									unID,	aRotate,	4+128	:	unID = unID + 1
		hotspot2	(distWP + _offsetX)*cos(aRotate),	-(distWP + _offsetX)*sin(aRotate),	unID,	aRotate,	5		:	unID = unID + 1
		hotspot2	0,									0,									unID,	aRotate,	6		:	unID = unID + 1

		rot2	totalAngle
			hotspot2	(distWP + _offsetX),				0,									unID,	aRotate,	4+128	:	unID = unID + 1
			hotspot2	(distWP + _offsetX)*cos(aRotate),	-(distWP + _offsetX)*sin(aRotate),	unID,	aRotate,	5		:	unID = unID + 1
			hotspot2	0,									0,									unID,	aRotate,	6		:	unID = unID + 1
		del 1

		rot2	-aRotate
	endif
endif

!	W.P
hotspot2	0,	0

!	채우기 펜
fillPen = 0
BackPen = -1

!	Underline Status
underStatus_Frame = 1
underStatus_Glass = 2

!===============================================================================================
!	Hotspot
!===============================================================================================
!	커튼월 곡률 반경
!-----------------------------------------------------------------------------------------------
hotspot2	0,		0,	unID,	distWP,	1+128	:	unID = unID + 1
hotspot2	-1,		0,	unID,	distWP,	3		:	unID = unID + 1
hotspot2	distWP,	0,	unID,	distWP,	2		:	unID = unID + 1

rot2	totalAngle
	hotspot2	0,		0,	unID,	distWP,	1+128	:	unID = unID + 1
	hotspot2	-1,		0,	unID,	distWP,	3		:	unID = unID + 1
	hotspot2	distWP,	0,	unID,	distWP,	2		:	unID = unID + 1
del 1

!	커튼월 생성 각도/멀리언 각도
!-----------------------------------------------------------------------------------------------
if	iDivision = Division_Angle	then
	if	iDirect = Direct_Out	then	_offsetX = 0.050
	if	iDirect = Direct_In		then	_offsetX = -0.050

	hotspot2	(distWP + _offsetX),					0,										unID,	totalAngle,	4+256		:	unID = unID + 1
	hotspot2	(distWP + _offsetX)*cos(totalAngle),	(distWP + _offsetX)*sin(totalAngle),	unID,	totalAngle,	5			:	unID = unID + 1
	hotspot2	0,										0,										unID,	totalAngle,	6+_option	:	unID = unID + 1

	if	not(bEqualAngle)	then
		for	i = 1	to	nMln
			hotspot2	(distWP + _offsetX),					0,										unID,	eachAngle[i],	4+128		:	unID = unID + 1
			hotspot2	(distWP + _offsetX)*cos(eachAngle[i]),	(distWP + _offsetX)*sin(eachAngle[i]),	unID,	eachAngle[i],	5			:	unID = unID + 1
			hotspot2	0,										0,										unID,	eachAngle[i],	6+_option	:	unID = unID + 1
		next	i
	endif
endif

!	유리 오프셋 / 두께
!-----------------------------------------------------------------------------------------------
if	iDirect = Direct_Out	then
	add2	distWP + frmThk,	0
		hotspot2	0,			0,	unID,	offsetGls,	1+128	:	unID = unID + 1
		hotspot2	-1,			0,	unID,	offsetGls,	3		:	unID = unID + 1
		hotspot2	offsetGls,	0,	unID,	offsetGls,	2		:	unID = unID + 1

		add2	offsetGls,	0
			hotspot2	0,		0,	unID,	glsThk,	1+128	:	unID = unID + 1
			hotspot2	-1,		0,	unID,	glsThk,	3		:	unID = unID + 1
			hotspot2	glsThk,	0,	unID,	glsThk,	2		:	unID = unID + 1
		del 1
	del 1

	rot2	totalAngle
		add2	distWP + frmThk,	0
			hotspot2	0,			0,	unID,	offsetGls,	1+128	:	unID = unID + 1
			hotspot2	-1,			0,	unID,	offsetGls,	3		:	unID = unID + 1
			hotspot2	offsetGls,	0,	unID,	offsetGls,	2		:	unID = unID + 1

			add2	offsetGls,	0
				hotspot2	0,		0,	unID,	glsThk,	1+128	:	unID = unID + 1
				hotspot2	-1,		0,	unID,	glsThk,	3		:	unID = unID + 1
				hotspot2	glsThk,	0,	unID,	glsThk,	2		:	unID = unID + 1
			del 1
		del 1
	del 1
endif
if	iDirect = Direct_In	then
	add2	distWP - frmThk,	0
		hotspot2	0,			0,	unID,	offsetGls,	1+128	:	unID = unID + 1
		hotspot2	1,			0,	unID,	offsetGls,	3		:	unID = unID + 1
		hotspot2	-offsetGls,	0,	unID,	offsetGls,	2		:	unID = unID + 1

		add2	-offsetGls,	0
			hotspot2	0,			0,	unID,	glsThk,	1+128	:	unID = unID + 1
			hotspot2	1,			0,	unID,	glsThk,	3		:	unID = unID + 1
			hotspot2	-glsThk,	0,	unID,	glsThk,	2		:	unID = unID + 1
		del 1
	del 1

	rot2	totalAngle
		add2	distWP - frmThk,	0
			hotspot2	0,			0,	unID,	offsetGls,	1+128	:	unID = unID + 1
			hotspot2	1,			0,	unID,	offsetGls,	3		:	unID = unID + 1
			hotspot2	-offsetGls,	0,	unID,	offsetGls,	2		:	unID = unID + 1

			add2	-offsetGls,	0
				hotspot2	0,			0,	unID,	glsThk,	1+128	:	unID = unID + 1
				hotspot2	1,			0,	unID,	glsThk,	3		:	unID = unID + 1
				hotspot2	-glsThk,	0,	unID,	glsThk,	2		:	unID = unID + 1
			del 1
		del 1
	del 1
endif



!===============================================================================================
!	프레임
!===============================================================================================
!	우측 프레임
!-----------------------------------------------------------------------------------------------
add2	distWP,	0
	if	bCornerR	then
		if	iCornerR = Corner_Boundary	then
			_iFrame = Frame_Corner
		endif
		if	iCornerR = Corner_Mullion	then
			_iFrame = Frame_Mullion
		endif
		if	iCornerR = Corner_Angled	then
			_iFrame = Frame_Angled
		endif

		_frmWdt = frmWdtR
		_gskWdt = gskWdtR
		_idxFrm = 1
		if	iDirect = Direct_Out	then
			_aFrm = -aFrmR
		else
			_aFrm = aFrmR
		endif

		mul2	1,	-1
			gosub	"Frame"
		del 1
	endif
del 1

!	멀리언
!-----------------------------------------------------------------------------------------------
_iFrame = Frame_Mullion
_frmWdt = mlnWdt
_gskWdt = mlnGskWdt
_aFrm = 0

for	i = 1	to	nMln
	rot2	eachAngle[i]
		add2	distWP,	0
			gosub	"Frame"

			if	bExMln[i]	then
				add2	frmThk + gskThk,	0
					gosub	"exFrame"
				del 1
			endif
		del 1
	del 1
next	i

!	좌측 프레임
!-----------------------------------------------------------------------------------------------
rot2	totalAngle
	add2	distWP,	0
		if	bCornerL	then
			if	iCornerL = Corner_Boundary	then
				_iFrame = Frame_Corner
			endif
			if	iCornerL = Corner_Mullion	then
				_iFrame = Frame_Mullion
			endif
			if	iCornerL = Corner_Angled	then
				_iFrame = Frame_Angled
			endif

			_frmWdt = frmWdtL
			_gskWdt = gskWdtL
			_idxFrm = 2
			if	iDirect = Direct_Out	then
				_aFrm = aFrmL
			else
				_aFrm = -aFrmL
			endif

			gosub	"Frame"
		endif
	del 1
del 1

!	하단 라인
!-----------------------------------------------------------------------------------------------
_pen = penEtc
_rad = distWP
gosub	"Underline"

if	iDirect = Direct_Out	then	_rad = distWP + frmThk
if	iDirect = Direct_In		then	_rad = distWP - frmThk
gosub	"Underline"

if	iDirect = Direct_Out	then	_rad = distWP + frmThk + gskThk
if	iDirect = Direct_In		then	_rad = distWP - frmThk - gskThk
gosub	"Underline"


!===============================================================================================
!	유리
!===============================================================================================
_pen = penGls

if	iDirect = Direct_Out	then	_rad = distWP + frmThk + offsetGls
if	iDirect = Direct_In		then	_rad = distWP - frmThk - offsetGls
gosub	"Underline"

if	iDirect = Direct_Out	then	_rad = distWP + frmThk + offsetGls + glsThk
if	iDirect = Direct_In		then	_rad = distWP - frmThk - offsetGls - glsThk
gosub	"Underline"


!===============================================================================================
!	문
!===============================================================================================

for	i = 1	to	nMln + 1
	if	bDoor[i]	then

		!	변수 정의
		!-----------------------------------------------------------------------------------------------
		if	nMln < eps	then
			_frameWdt_SP = frmWdtL
			_frameWdt_EP = frmWdtR
			_innerAngle = totalAngle
		else
			!	프레임
			if	i = 1	then
				_frameWdt_SP = frmWdtL
				_frameWdt_EP = mlnWdt
			endif

			if	i # 1 & i # (nMln + 1)	then
				_frameWdt_SP = mlnWdt
				_frameWdt_EP = mlnWdt
			endif

			if	i = (nMln + 1)	then
				_frameWdt_SP = mlnWdt
				_frameWdt_EP = frmWdtR
			endif

			!	내부 각도
			if	i = 1	then
				_innerAngle = eachAngle[i]
				_hotspotAngle = 0
			else
				_innerAngle = eachAngle[i] - eachAngle[i - 1]
				_hotspotAngle = eachAngle[i - 1]
			endif
		endif
		_subAngle = 90 - (180 - _innerAngle)/2
		_aInner = _innerAngle/2

		_iDoorType = iMatrix_Type[i][1]
		_iOpenDirect = iMatrix_Type[i][2]
		_iSymbol = iMatrix_Type[i][4]

		_doorWdt = Matrix_Length[i][1]
		_doorThk = Matrix_Length[i][3]
		_doorLct = Matrix_Length[i][4]
		_fixWdtL = Matrix_Length[i][5]
		_fixWdtR = Matrix_Length[i][6]

		!	DoorLct 핫스팟
		!-----------------------------------------------------------------------------------------------
		rot2	_hotspotAngle
			add2	distWP,	_frameWdt_SP/2

				!	커튼월 생성 방향 : 외부
				if	iDirect = Direct_Out	then
					hotspot2	0,						0,	unID,	Matrix_Length[i][4],	1+128	:	unID = unID + 1
					hotspot2	-1,						0,	unID,	Matrix_Length[i][4],	3		:	unID = unID + 1
					hotspot2	Matrix_Length[i][4],	0,	unID,	Matrix_Length[i][4],	2		:	unID = unID + 1

					! if	GLOB_FEEDBACK_MODE	then
					! 	add2	Matrix_Length[i][4],	0
					! 		line2	0,	0,	0,	_frameWdt_SP/2
					! 	del 1
					! endif
				endif

				!	커튼월 생성 방향 : 내부
				if	iDirect = Direct_In	then
					hotspot2	0,						0,	unID,	Matrix_Length[i][4],	1+128	:	unID = unID + 1
					hotspot2	1,						0,	unID,	Matrix_Length[i][4],	3		:	unID = unID + 1
					hotspot2	-Matrix_Length[i][4],	0,	unID,	Matrix_Length[i][4],	2		:	unID = unID + 1

					! if	GLOB_FEEDBACK_MODE	then
					! 	add2	-Matrix_Length[i][4],	0
					! 		line2	0,	0,	0,	_frameWdt_SP/2
					! 	del 1
					! endif
				endif
			del 1
		del 1

		!	Fixed Glass(Frame)
		!-----------------------------------------------------------------------------------------------
		drawindex	50
		pen			penFrm

			!	커튼월 생성 방향
			if	iDirect = Direct_Out	then
				_distWP = distWP + frmThk + gskThk
				_distOffGls = distWP + frmThk + offsetGls
				_distGls = distWP + frmThk + offsetGls + glsThk
				_mul = 1
			endif

			if	iDirect = Direct_In	then
				_distWP = distWP - frmThk - gskThk
				_distOffGls = distWP - frmThk - offsetGls
				_distGls = distWP - frmThk - offsetGls - glsThk
				_mul = -1
			endif

			!	Vertical Frame
			_transX = 0
			_rDist_SP = frmThk + gskThk - (_doorLct + (_frameWdt_SP/2)*tan(_aInner)*_mul)
			_rDist_EP = frmThk + gskThk - (_doorLct + (_frameWdt_EP/2)*tan(_aInner)*_mul)
			if	_fixWdtL > eps	then
				_doorWdt = _doorWdt - (_fixWdtL + mlnWdt/2) + ((_frameWdt_SP/2)/cos(_aInner) + _rDist_SP*sin(_aInner)*_mul)
				_transX = (_fixWdtL + mlnWdt/2) - ((_frameWdt_SP/2)/cos(_aInner) + _rDist_SP*sin(_aInner)*_mul)
			endif
			if	_fixWdtR > eps	then
				_doorWdt = _doorWdt - (_fixWdtR + mlnWdt/2) + ((_frameWdt_EP/2)/cos(_aInner) + _rDist_EP*sin(_aInner)*_mul)
			endif

			if	_fixWdtL > eps	then
				rot2	_hotspotAngle
					add2	_distWP,	0
						rot2	_aInner
							!	_fixWdtL
							hotspot2	0,	0,						unID,	Matrix_Length[i][5],	1+128	:	unID = unID + 1
							hotspot2	0,	-1,						unID,	Matrix_Length[i][5],	3		:	unID = unID + 1
							hotspot2	0,	Matrix_Length[i][5],	unID,	Matrix_Length[i][5],	2		:	unID = unID + 1

							add2	0,	_fixWdtL
								if	iMlnType = Mln_Type1	then
									put	0,									mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnGskWdt/2,	1,
										0,									-mlnGskWdt/2,	1
								endif

								if	iMlnType = Mln_Type2	then
									put	0,									mlnWdt/2,		1,
										-capThk*cos(_aInner),				mlnWdt/2,		1,
										-capThk*cos(_aInner),				mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnGskWdt/2,	1,
										-capThk*cos(_aInner),				-mlnGskWdt/2,	1,
										-capThk*cos(_aInner),				-mlnWdt/2,		1,
										0,									-mlnWdt/2,		1
								endif

								mul2	_mul,	1
									poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	get(nsp)
								del 1
							del 1
						del 1
					del 1
				del 1
			endif

			if	_fixWdtR > eps	then
				rot2	_hotspotAngle
					add2	_distWP,	0
						rot2	_aInner
							!	_fixWdtR
							add2	0,	distMln[i]
								hotspot2	0,	0,						unID,	Matrix_Length[i][6],	1+128	:	unID = unID + 1
								hotspot2	0,	1,						unID,	Matrix_Length[i][6],	3		:	unID = unID + 1
								hotspot2	0,	-Matrix_Length[i][6],	unID,	Matrix_Length[i][6],	2		:	unID = unID + 1
							del 1

							add2	0,	distMln[i] - _fixWdtR
								if	iMlnType = Mln_Type1	then
									put	0,									mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnGskWdt/2,	1,
										0,									-mlnGskWdt/2,	1
								endif

								if	iMlnType = Mln_Type2	then
									put	0,									mlnWdt/2,		1,
										-capThk*cos(_aInner),				mlnWdt/2,		1,
										-capThk*cos(_aInner),				mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnGskWdt/2,	1,
										-gskThk*cos(_aInner),				mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	mlnWdt/2,		1,
										-(frmThk + gskThk)*cos(_aInner),	-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnWdt/2,		1,
										-gskThk*cos(_aInner),				-mlnGskWdt/2,	1,
										-capThk*cos(_aInner),				-mlnGskWdt/2,	1,
										-capThk*cos(_aInner),				-mlnWdt/2,		1,
										0,									-mlnWdt/2,		1
								endif

								mul2	_mul,	1
									poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	get(nsp)
								del 1
							del 1
						del 1
					del 1
				del 1
			endif

			!	Bottom Frame
			drawindex	10
			pen			penEtc

			if	_fixWdtL > eps	then
				rot2	_hotspotAngle
					add2	_distWP,	0
						rot2	_aInner
							line2	0,	0,	0,	_fixWdtL
						del 1
					del 1

					add2	distWP,	0
						rot2	_aInner
							line2	0,	0,	0,	_fixWdtL - (frmThk + gskThk)*sin(_aInner)*_mul
						del 1
					del 1
				del 1
			endif

			if	_fixWdtR > eps	then
				rot2	eachAngle[i]
					add2	_distWP,	0
						rot2	-_aInner
							line2	0,	0,	0,	-_fixWdtR
						del 1
					del 1

					add2	distWP,	0
						rot2	-_aInner
							line2	0,	0,	0,	-_fixWdtR + (frmThk + gskThk)*sin(_aInner)*_mul
						del 1
					del 1
				del 1
			endif

		!	Fixed Glass(Glass)
		!-----------------------------------------------------------------------------------------------
		drawindex	10
		pen			penGls

		if	_fixWdtL > eps	then
			rot2	_hotspotAngle
				add2	_distOffGls,	0
					rot2	_aInner
						line2	0,	0,	0,	_fixWdtL - (gskThk - offsetGls)*sin(_aInner)*_mul
					del 1
				del 1

				add2	_distGls,	0
					rot2	_aInner
						line2	0,	0,	0,	_fixWdtL - (gskThk - offsetGls - glsThk)*sin(_aInner)*_mul
					del 1
				del 1
			del 1
		endif

		if	_fixWdtR > eps	then
			rot2	eachAngle[i]
				add2	_distOffGls,	0
					rot2	-_aInner
						line2	0,	0,	0,	-_fixWdtR + (gskThk - offsetGls)*sin(_aInner)*_mul
					del 1
				del 1

				add2	_distGls,	0
					rot2	-_aInner
						line2	0,	0,	0,	-_fixWdtR + (gskThk - offsetGls - glsThk)*sin(_aInner)*_mul
					del 1
				del 1
			del 1
		endif


		!	Door Frame
		!-----------------------------------------------------------------------------------------------
		pen	penFrm

		rot2	_hotspotAngle

			!	커튼월 생성 방향 : 외부
			if	iDirect = Direct_Out	then
				add2	distWP + _doorLct,	_frameWdt_SP/2
					!	심볼 위치 : 전면 / 모두
					if	_iSymbol = Symbol_Front | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										rot2	-90
											rect2	0,	0,	-_doorThk,	_doorWdt
										del 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											rot2	-90
												rect2	0,	0,	_doorThk,	_doorWdt
											del 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									rot2	-90
										rect2	0,	0,	-_doorThk,	_doorWdt/2
									del 1

									!	End Point
									add2	0,	_doorWdt
										rot2	-90
											rect2	0,	0,	_doorThk,	_doorWdt/2
										del 1
									del 1
								endif
							del 1
						del 1
					endif

					!	심볼 위치 : 후면 / 모두
					if	_iSymbol = Symbol_Back | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										rot2	90
											rect2	0,	0,	_doorThk,	_doorWdt
										del 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											rot2	90
												rect2	0,	0,	-_doorThk,	_doorWdt
											del 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									rot2	90
										rect2	0,	0,	_doorThk,	_doorWdt/2
									del 1

									!	End Point
									add2	0,	_doorWdt
										rot2	90
											rect2	0,	0,	-_doorThk,	_doorWdt/2
										del 1
									del 1
								endif
							del 1
						del 1
					endif
				del 1
			endif

			!	커튼월 생성 방향 : 내부
			if	iDirect = Direct_In	then
				add2	distWP - _doorLct,	_frameWdt_SP/2
					!	심볼 위치 : 전면 / 모두
					if	_iSymbol = Symbol_Front | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										rot2	90
											rect2	0,	0,	_doorThk,	_doorWdt
										del 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											rot2	90
												rect2	0,	0,	-_doorThk,	_doorWdt
											del 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									rot2	90
										rect2	0,	0,	_doorThk,	_doorWdt/2
									del 1

									!	End Point
									add2	0,	_doorWdt
										rot2	90
											rect2	0,	0,	-_doorThk,	_doorWdt/2
										del 1
									del 1
								endif
							del 1
						del 1
					endif

					!	심볼 위치 : 후면 / 모두
					if	_iSymbol = Symbol_Back | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										rot2	-90
											rect2	0,	0,	-_doorThk,	_doorWdt
										del 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											rot2	-90
												rect2	0,	0,	_doorThk,	_doorWdt
											del 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									rot2	-90
										rect2	0,	0,	-_doorThk,	_doorWdt/2
									del 1

									!	End Point
									add2	0,	_doorWdt
										rot2	-90
											rect2	0,	0,	_doorThk,	_doorWdt/2
										del 1
									del 1
								endif
							del 1
						del 1
					endif
				del 1
			endif
		del 1

		!	Open Line
		!-----------------------------------------------------------------------------------------------
		pen	penOpn

		rot2	_hotspotAngle

			!	커튼월 생성 방향 : 외부
			if	iDirect = Direct_Out	then
				add2	distWP + _doorLct,	_frameWdt_SP/2
					!	심볼 위치 : 전면 / 모두
					if	_iSymbol = Symbol_Front | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										arc2	0,	0,	_doorWdt,	0,	90
										hotarc2	0,	0,	_doorWdt,	0,	90,	unID	:	unID = unID + 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											arc2	0,	0,	_doorWdt,	-90,	0
											hotarc2	0,	0,	_doorWdt,	-90,	0,	unID	:	unID = unID + 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									arc2	0,	0,	_doorWdt/2,	0,	90
									hotarc2	0,	0,	_doorWdt/2,	0,	90,	unID	:	unID = unID + 1

									!	End Point
									add2	0,	_doorWdt
										arc2	0,	0,	_doorWdt/2,	-90,	0
										hotarc2	0,	0,	_doorWdt/2,	-90,	0,	unID	:	unID = unID + 1
									del 1
								endif
							del 1
						del 1
					endif

					!	심볼 위치 : 후면 / 모두
					if	_iSymbol = Symbol_Back | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										arc2	0,	0,	_doorWdt,	90,	180
										hotarc2	0,	0,	_doorWdt,	90,	180,	unID	:	unID = unID + 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											arc2	0,	0,	_doorWdt,	-180,	-90
											hotarc2	0,	0,	_doorWdt,	-180,	-90,	unID	:	unID = unID + 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									arc2	0,	0,	_doorWdt/2,	90,	180
									hotarc2	0,	0,	_doorWdt/2,	90,	180,	unID	:	unID = unID + 1

									!	End Point
									add2	0,	_doorWdt
										arc2	0,	0,	_doorWdt/2,	-180,	-90
										hotarc2	0,	0,	_doorWdt/2,	-180,	-90,	unID	:	unID = unID + 1
									del 1
								endif
							del 1
						del 1
					endif
				del 1
			endif

			!	커튼월 생성 방향 : 내부
			if	iDirect = Direct_In	then
				add2	distWP - _doorLct,	_frameWdt_SP/2
					!	심볼 위치 : 전면 / 모두
					if	_iSymbol = Symbol_Front | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										arc2	0,	0,	_doorWdt,	90,	180
										hotarc2	0,	0,	_doorWdt,	90,	180,	unID	:	unID = unID + 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											arc2	0,	0,	_doorWdt,	-180,	-90
											hotarc2	0,	0,	_doorWdt,	-180,	-90,	unID	:	unID = unID + 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									arc2	0,	0,	_doorWdt/2,	90,	180
									hotarc2	0,	0,	_doorWdt/2,	90,	180,	unID	:	unID = unID + 1

									!	End Point
									add2	0,	_doorWdt
										arc2	0,	0,	_doorWdt/2,	-180,	-90
										hotarc2	0,	0,	_doorWdt/2,	-180,	-90,	unID	:	unID = unID + 1
									del 1
								endif
							del 1
						del 1
					endif

					!	심볼 위치 : 후면 / 모두
					if	_iSymbol = Symbol_Back | _iSymbol = Symbol_All	then
						rot2	_subAngle
							add2	0,	_transX
								!	유형 : 기본형(1Panel)
								if	_iDoorType = DoorType_1panel	then
									!	열림 방향 : 오른쪽
									if	_iOpenDirect = OpenDirect_Right	then
										arc2	0,	0,	_doorWdt,	0,	90
										hotarc2	0,	0,	_doorWdt,	0,	90,	unID	:	unID = unID + 1
									endif

									!	열림 방향 : 왼쪽
									if	_iOpenDirect = OpenDirect_Left	then
										add2	0,	_doorWdt
											arc2	0,	0,	_doorWdt,	-90,	0
											hotarc2	0,	0,	_doorWdt,	-90,	0,	unID	:	unID = unID + 1
										del 1
									endif
								endif

								!	유형 : 양문형(2Panel)
								if	_iDoorType = DoorType_2panel	then
									!	Start Point
									arc2	0,	0,	_doorWdt/2,	0,	90
									hotarc2	0,	0,	_doorWdt/2,	0,	90,	unID	:	unID = unID + 1

									!	End Point
									add2	0,	_doorWdt
										arc2	0,	0,	_doorWdt/2,	-90,	0
										hotarc2	0,	0,	_doorWdt/2,	-90,	0,	unID	:	unID = unID + 1
									del 1
								endif
							del 1
						del 1
					endif
				del 1
			endif
		del 1

	endif
next	i


!===============================================================================================
!	배연창(2D Symbol)
!===============================================================================================
pen		symbolPen
fill	64

!	Scale
symbolOffset = symbolOffset*GLOB_SCALE
symbolSize = symbolSize*GLOB_SCALE

!	배연창 유/무 확인
dim	_bSymbol2D[]

for	i = 1	to	nMln + 1
	_nCount = 0

	for	j = 1	to	nTrs + 1
		if	iPanelType[i][j] = Panel_Smoke	then
			_nCount = _nCount + 1
		endif
	next	j

	if	_nCount > eps	then
		_bSymbol2D[i] = 1
	endif
next	i

!	배연창 심볼
if	bSymbol2D	then
	!	심볼
	for	i = 1	to	nMln + 1
		if	i = 1	then
			_aSymbol = eachAngle[i]/2
			_aHalf = eachAngle[i]/2
		endif
		if	i # 1	then
			_aSymbol = eachAngle[i - 1] + (eachAngle[i] - eachAngle[i - 1])/2
			_aHalf = (eachAngle[i] - eachAngle[i - 1])/2
		endif

		rot2	_aSymbol

			if	_bSymbol2D[i]	then
				if	iDirect = Direct_Out	then
					_symbolRad = (distWP + frmThk + gskThk)*cos(_aHalf)
					_bMirror = 1
				endif
				if	iDirect = Direct_In		then
					_symbolRad = (distWP - frmThk - gskThk)*cos(_aHalf)
					_bMirror = -1
				endif

				add2	_symbolRad,	0
					mul2	_bMirror,	1
						add2	symbolOffset,	0
							put	0,						0,			1,
								-symbolSize*tan(30),	symbolSize,	1,
								symbolSize*tan(30),		symbolSize,	1

							rot2	-90
								poly2_	nsp/3,	1+2+4,	get(nsp)
							del 1
						del 1

						!	Hotspot
						hotspot2	0,				0,	unID,	symbolOffset,	1+128+1024	:	unID = unID + 1
						hotspot2	-1,				0,	unID,	symbolOffset,	3			:	unID = unID + 1
						hotspot2	symbolOffset,	0,	unID,	symbolOffset,	2			:	unID = unID + 1

						add2	symbolOffset,	0
							hotspot2	0,			0,	unID,	symbolSize,	1+128+1024	:	unID = unID + 1
							hotspot2	-1,			0,	unID,	symbolSize,	3			:	unID = unID + 1
							hotspot2	symbolSize,	0,	unID,	symbolSize,	2			:	unID = unID + 1
						del 1
					del 1
				del 1
			endif

		del 1
	next	i


endif


!===============================================================================================
!	창호입면도
!===============================================================================================
if	_iWinElev = WinElev_On & bGuideLine	then
	if	iDirect = Direct_Out	then
		_elevLct = distWP + frmThk + gskThk
		_dumpValue = dElev2D + 0.100
	endif
	if	iDirect = Direct_In		then
		_elevLct = distWP - (frmThk + gskThk)
		_dumpValue = -(dElev2D + 0.100)
	endif

	!	Elevation Length
	_elevLth = 0
	if	nMln < eps	then
		_elevLth = distMln[1]
	else
		for	i =	1	to	nMln + 1
			_elevLth = _elevLth + distMln[i]
		next	i
	endif
	_yPosStart = _elevLth*(aElev2D/totalAngle)
	_yPosEnd = _elevLth - _yPosStart

	!	aElev2D
	hotspot2	_elevLct + _dumpValue,					0,										unID,	aElev2D,	4+128	:	unID = unID + 1
	hotspot2	(_elevLct + _dumpValue)*cos(aElev2D),	(_elevLct + _dumpValue)*sin(aElev2D),	unID,	aElev2D,	5		:	unID = unID + 1
	hotspot2	0,										0,										unID,	aElev2D,	6		:	unID = unID + 1

	rot2	aElev2D
		if	iDirect = Direct_Out	then
			add2	distWP + frmThk + gskThk,	0
				!	dElev2D
				hotspot2	0,			0,	unID,	dElev2D,	1+128	:	unID = unID + 1
				hotspot2	-1,			0,	unID,	dElev2D,	3		:	unID = unID + 1
				hotspot2	dElev2D,	0,	unID,	dElev2D,	2		:	unID = unID + 1

				!	Guide Line
				add2	dElev2D,	0
					line2		0,	-_yPosStart,	0,	_yPosEnd
					hotline2	0,	-_yPosStart,	0,	_yPosEnd
				del 1
			del 1
		endif

		if	iDirect = Direct_In	then
			add2	distWP - (frmThk + gskThk),	0
				!	dElev2D
				hotspot2	0,			0,	unID,	dElev2D,	1+128	:	unID = unID + 1
				hotspot2	1,			0,	unID,	dElev2D,	3		:	unID = unID + 1
				hotspot2	-dElev2D,	0,	unID,	dElev2D,	2		:	unID = unID + 1

				!	Guide Line
				add2	-dElev2D,	0
					line2		0,	-_yPosStart,	0,	_yPosEnd
					hotline2	0,	-_yPosStart,	0,	_yPosEnd
				del 1
			del 1
		endif
	del 1
endif




!===============================================================================================
!===============================================================================================
end
!===============================================================================================
!===============================================================================================


!===============================================================================================
!	Sub-Routine
!===============================================================================================
!	Frame
!-----------------------------------------------------------------------------------------------
"Frame" :
!-----------------------------------------------------------------------------------------------
drawindex	50
pen			penFrm
fill		65

if	iDirect = Direct_Out	then	mul2	1,	1
if	iDirect = Direct_In		then	mul2	-1,	1

_transX = 0
_transY = 0

	hotspot2	0,					0
	hotspot2	frmThk,				0
	hotspot2	frmThk + gskThk,	0

	if	_iFrame = Frame_Corner	then
		put	-_frmWdt/2,	0,					1,
			-_frmWdt/2,	frmThk + gskThk,	1,
			_gskWdt/2,	frmThk + gskThk,	1,
			_gskWdt/2,	frmThk,				1,
			_frmWdt/2,	frmThk,				1,
			_frmWdt/2,	0,					1
	endif

	if	_iFrame = Frame_Mullion	then
		if	iMlnType = Mln_Type1	then
			put	-_frmWdt/2,	0,					1,
				-_frmWdt/2,	frmThk,				1,
				-_gskWdt/2,	frmThk,				1,
				-_gskWdt/2,	frmThk + gskThk,	1,
				_gskWdt/2,	frmThk + gskThk,	1,
				_gskWdt/2,	frmThk,				1,
				_frmWdt/2,	frmThk,				1,
				_frmWdt/2,	0,					1
		endif
		if	iMlnType = Mln_Type2	then
			put	-_frmWdt/2,	0,							1,
				-_frmWdt/2,	frmThk,						1,
				-_gskWdt/2,	frmThk,						1,
				-_gskWdt/2,	frmThk + gskThk - capThk,	1,
				-_frmWdt/2,	frmThk + gskThk - capThk,	1,
				-_frmWdt/2,	frmThk + gskThk,			1,
				_frmWdt/2,	frmThk + gskThk,			1,
				_frmWdt/2,	frmThk + gskThk - capThk,	1,
				_gskWdt/2,	frmThk + gskThk - capThk,	1,
				_gskWdt/2,	frmThk,						1,
				_frmWdt/2,	frmThk,						1,
				_frmWdt/2,	0,							1
		endif
	endif

	if	_iFrame = Frame_Angled	then
		dim	_frmPoint[][]
		dim	_xPosTrans[],	_yPosTrans[]

		if	iDirect = Direct_Out	then
			_bReverse = 1
		else
			_bReverse = -1
		endif

		if	_idxFrm = 1	then
			hotspot2	frmThk + gskThk,				0,											unID,	aFrmR,	4+128		:	unID = unID + 1
			hotspot2	(frmThk + gskThk)*cos(aFrmR),	-(frmThk + gskThk)*sin(aFrmR)*_bReverse,	unID,	aFrmR,	5			:	unID = unID + 1
			hotspot2	0,								0,											unID,	aFrmR,	6+_option	:	unID = unID + 1
		endif
		if	_idxFrm = 2	then
			hotspot2	frmThk + gskThk,				0,										unID,	aFrmL,	4+128		:	unID = unID + 1
			hotspot2	(frmThk + gskThk)*cos(aFrmL),	(frmThk + gskThk)*sin(aFrmL)*_bReverse,	unID,	aFrmL,	5			:	unID = unID + 1
			hotspot2	0,								0,										unID,	aFrmL,	6+_option	:	unID = unID + 1
		endif

		!	Point
			!	Point1
			_frmPoint[1][1] = -_frmWdt/2
			_frmPoint[1][2] = 0

			!	Point2
			_frmPoint[2][1] = -_frmWdt/2
			_frmPoint[2][2] = frmThk/cos(_aFrm)

			!	Point3
			_frmPoint[3][1] = -_gskWdt/2
			_frmPoint[3][2] = frmThk/cos(_aFrm)

			!	Point4
			_frmPoint[4][1] = -_gskWdt/2
			_frmPoint[4][2] = (frmThk + gskThk)/cos(_aFrm) + (_frmWdt - _gskWdt)/2*tan(_aFrm)

			!	Point5
			_frmPoint[5][1] = _gskWdt/2
			_frmPoint[5][2] = (frmThk + gskThk)/cos(_aFrm) + (_frmWdt - _gskWdt)/2*tan(_aFrm)

			!	Point6
			_frmPoint[6][1] = _gskWdt/2
			_frmPoint[6][2] = frmThk/cos(_aFrm)

			!	Point7
			_frmPoint[7][1] = _frmWdt/2
			_frmPoint[7][2] = frmThk/cos(_aFrm)

			!	Point8
			_frmPoint[8][1] = _frmWdt/2
			_frmPoint[8][2] = 0

		!	좌표이동값
		_refer = _frmWdt/2*tan(_aFrm)
		_transX = _refer*cos(_aFrm)
		_transY = _refer*sin(_aFrm)

		for	i = 1	to	8
			_xPosTrans[i] = (_frmPoint[i][1])*cos(_aFrm) - (_frmPoint[i][2])*sin(_aFrm) - _transX
			_yPosTrans[i] = (_frmPoint[i][1])*sin(_aFrm) + (_frmPoint[i][2])*cos(_aFrm) - _transY

			put	_xPosTrans[i],	_yPosTrans[i],	1
		next	i
	endif

	add2	-_transX,	-_transY
		rot2	-90
	add2	_transX,	_transY
		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))
	del 1
		del 1
	del 1
del 1

return


!-----------------------------------------------------------------------------------------------
!	Extrude	Frame
!-----------------------------------------------------------------------------------------------
"exFrame" :
!-----------------------------------------------------------------------------------------------
drawindex	50
pen			penFrm
fill		65

if	iDirect = Direct_Out	then	mul2	1,	1
if	iDirect = Direct_In		then	mul2	-1,	1

	hotspot2	exMlnThk,	0

	put	-_frmWdt/2,	0,			1,
		-_frmWdt/2,	exMlnThk,	1,
		_frmWdt/2,	exMlnThk,	1,
		_frmWdt/2,	0,			1

	rot2	-90
		poly2_b	nsp/3,	1+2+4,	fillPen,	backPen,	use(nsp)

		!	hotline
		for	h = 1	to	(nsp/3) - 2
			hotline2	get(2) + (use(1) - get(1)),	use(2)
		next	h
			hotline2	get(2) + (use(1) - get(1)),	get(2) + (use(1) - get(1))
	del 1


del 1


return


!-----------------------------------------------------------------------------------------------
!	Underline
!-----------------------------------------------------------------------------------------------
"Underline"	:
!-----------------------------------------------------------------------------------------------
drawindex	10
pen			_pen

!	좌표이동값
_refer = _frmWdt/2*tan(_aFrm)
_transX = _refer*cos(_aFrm)
_transY = _refer*sin(_aFrm)

if	nMln < eps	then
	if	not(bDoor[1])	then
		put	_rad,	0,	_rad*cos(totalAngle),	_rad*sin(totalAngle)

		line2		use(nsp)
		hotline2	get(nsp)

		!	좌측 코너 프레임 연장선
		if	iCornerL = Frame_Angled	then
			rot2	totalAngle
				add2	distWP,	0
					if	iDirect = Direct_Out	then
						if	not(abs(_rad - (distWP + frmThk + gskThk)) < eps)	then
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL)
						else
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL) - (gskWdtL/2)/cos(aFrmL)
						endif
					else
						if	not(abs(_rad - (distWP - frmThk - gskThk)) < eps)	then
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL)
						else
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL) - (gskWdtL/2)/cos(aFrmL)
						endif
					endif

					line2		use(nsp)
					hotline2	get(nsp)
				del 1
			del 1
		endif

		!	우측 코너 프레임 연장선
		if	iCornerR = Frame_Angled	then
			add2	distWP,	0
				if	iDirect = Direct_Out	then
					if	not(abs(_rad - (distWP + frmThk + gskThk)) < eps)	then
						put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR)
					else
						put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR) + (gskWdtR/2)/cos(aFrmR)
					endif
				else
					if	not(abs(_rad - (distWP - frmThk - gskThk)) < eps)	then
						put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR)
					else
						put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR) + (gskWdtR/2)/cos(aFrmR)
					endif
				endif

				line2		use(nsp)
				hotline2	get(nsp)
			del 1
		endif
	endif
else
	for	i = 1	to	nMln + 1
		if	not(bDoor[i])	then
			if	i = 1	then
				put	_rad,	0,	_rad*cos(eachAngle[i]),	_rad*sin(eachAngle[i])
			endif
			if	i # 1 & i # nMln + 1	then
				put	_rad*cos(eachAngle[i - 1]),	_rad*sin(eachAngle[i - 1]),	_rad*cos(eachAngle[i]),	_rad*sin(eachAngle[i])
			endif
			if	i = nMln + 1	then
				put	_rad*cos(eachAngle[i - 1]),	_rad*sin(eachAngle[i - 1]),	_rad*cos(totalAngle),	_rad*sin(totalAngle)
			endif

			line2		use(nsp)
			hotline2	get(nsp)

			!	좌측 코너 프레임 연장선
			if	iCornerL = Frame_Angled	then
				rot2	totalAngle
					add2	distWP,	0
						if	iDirect = Direct_Out	then
							if	not(abs(_rad - (distWP + frmThk + gskThk)) < eps)	then
								put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL)
							else
								put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL) - (gskWdtL/2)/cos(aFrmL)
							endif
						else
							if	not(abs(_rad - (distWP - frmThk - gskThk)) < eps)	then
								put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL)
							else
								put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmL) - (gskWdtL/2)/cos(aFrmL)
							endif
						endif

						line2		use(nsp)
						hotline2	get(nsp)
					del 1
				del 1
			endif

			!	우측 코너 프레임 연장선
			if	iCornerR = Frame_Angled	then
				add2	distWP,	0
					if	iDirect = Direct_Out	then
						if	not(abs(_rad - (distWP + frmThk + gskThk)) < eps)	then
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR)
						else
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR) + (gskWdtR/2)/cos(aFrmR)
						endif
					else
						if	not(abs(_rad - (distWP - frmThk - gskThk)) < eps)	then
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR)
						else
							put	(_rad - distWP),	0,	(_rad - distWP),	(_rad - distWP)*tan(aFrmR) + (gskWdtR/2)/cos(aFrmR)
						endif
					endif

					line2		use(nsp)
					hotline2	get(nsp)
				del 1
			endif
		endif
	next	i
endif


return