!===============================================================================================
!	시스템창호N
!===============================================================================================
values	"nMln"	range	[0,	40]
values	"nTrs"	range	[0,	40]

values	"gskThk"	range	(0,	)
values	"gskCapThk"	range	(0,	)

values	"frmWdtB"	range	(0,	)
values	"frmThkB"	range	(0,	)
values	"gskWdtB"	range	(0,	)
values	"frmWdtT"	range	(0,	)
values	"frmThkT"	range	(0,	)
values	"gskWdtT"	range	(0,	)
values	"frmWdtL"	range	(0,	)
values	"frmThkL"	range	(0,	)
values	"gskWdtL"	range	(0,	)
values	"frmWdtR"	range	(0,	)
values	"frmThkR"	range	(0,	)
values	"gskWdtR"	range	(0,	)

values	"mlnThk"	range	(0,	)
values	"mlnWdt"	range	(0,	)
values	"mlnGskWdt"	range	(0,	)
values	"mlnGap"	range	[0.100,	)

values	"trsThk"	range	(0,	)
values	"trsWdt"	range	(0,	)
values	"trsGskWdt"	range	(0,	)
values	"trsGap"	range	[0.100,	)

values	"aFrmL"	range	[0,	60],	range	[300,	360]
if	iFrmTypeL = FRAME_BOUNDARY	then
	parameters	aFrmL = 0
	lock		"aFrmL"
endif

values	"aFrmR"	range	[0,	60],	range	[300,	360]
if	iFrmTypeR = FRAME_BOUNDARY	then
	parameters	aFrmR = 0
	lock		"aFrmR"
endif

!	커튼월 너비/높이 자동계산
!-----------------------------------------------------------------------------------------------
lock	"ctwWdt", "ctwHgt"

	!	기본값
	for	i = 1	to	41
		if	mlnGap[i] < eps	then
			parameters	mlnGap[i] = 0.800
		endif

		if	trsGap[i] < eps	then
			parameters	trsGap[i] = 0.500
		endif
	next	i

	!	계산
	_ctwWdt = 0
	for	i = 1	to	nMln + 1
		_ctwWdt = _ctwWdt + mlnGap[i]
	next	i
	parameters	ctwWdt = _ctwWdt

	_ctwHgt = 0
	for	i = 1	to	nTrs + 1
		_ctwHgt = _ctwHgt + trsGap[i]
	next	i
	parameters	ctwHgt = _ctwHgt

!	코너프레임 유형
!-----------------------------------------------------------------------------------------------
values{2}	"iFrmTypeL"	FRAME_BOUNDARY,	stFrmType[FRAME_BOUNDARY],
						FRAME_MULLION,	stFrmType[FRAME_MULLION]

values{2}	"iFrmTypeR"	FRAME_BOUNDARY,	stFrmType[FRAME_BOUNDARY],
						FRAME_MULLION,	stFrmType[FRAME_MULLION]

values{2}	"iFrmTypeT"	FRAME_BOUNDARY,	stFrmType[FRAME_BOUNDARY],
						FRAME_TRANSOM,	stFrmType[FRAME_TRANSOM]

values{2}	"iFrmTypeB"	FRAME_BOUNDARY,	stFrmType[FRAME_BOUNDARY],
						FRAME_TRANSOM,	stFrmType[FRAME_TRANSOM]

!	코너멀리언 유형
!-----------------------------------------------------------------------------------------------
values{2}	"iCornerType"	CORNER_TYPE1,	stCornerType[CORNER_TYPE1],
							CORNER_TYPE2,	stCornerType[CORNER_TYPE2]

if	iCornerType < eps	then
	parameters	iCornerType = CORNER_TYPE1
endif

!	멀리언 유형
!-----------------------------------------------------------------------------------------------
values{2}	"iMlnType"	MLN_TYPE1,	stMlnType[MLN_TYPE1],
						MLN_TYPE2,	stMlnType[MLN_TYPE2]

!	트랜섬 유형
!-----------------------------------------------------------------------------------------------
values{2}	"iTrsType"	TRS_TYPE1,	stTrsType[TRS_TYPE1],
						TRS_TYPE2,	stTrsType[TRS_TYPE2]

!-----------------------------------------------------------------------------------------------
!	패널
!-----------------------------------------------------------------------------------------------
values	"glsThk"	range	(0,	gskThk)
values	"glsLct"	range	[0,	(gskThk - glsThk)]
values	"txtSize"	range	(0,	)
values	"insThk_1"	range	(0,	)
values	"insThk_2"	range	(0,	)
values	"insThk_3"	range	(0,	)
values	"insThk_4"	range	(0,	)
values	"grlThk"	range	(0,	)
values	"grlGap"	range	(0,	)
values	"aGrl"		range	[-90,	90]

values	"spdFrmThk"	range	(0,	)

!	 패널 유형
!-----------------------------------------------------------------------------------------------
values{2}	"iPnlType"	PNL_FIX,			stPnlType[PNL_FIX],
						PNL_PROJECT,		stPnlType[PNL_PROJECT],
						PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
						PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
						PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
						PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
						PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
						PNL_GRILL,			stPnlType[PNL_GRILL],
						PNL_OPEN,			stPnlType[PNL_OPEN],
						PNL_SEP2_HORIZON,	stPnlType[PNL_SEP2_HORIZON],
						PNL_SEP3_HORIZON,	stPnlType[PNL_SEP3_HORIZON],
						PNL_SEP2_VERTICAL,	stPnlType[PNL_SEP2_VERTICAL],
						PNL_SEP3_VERTICAL,	stPnlType[PNL_SEP3_VERTICAL]

!	프로젝트창 힌지 위치
!-----------------------------------------------------------------------------------------------
values{2}	"iHingeType"	HINGE_TOP,			stHingeType[HINGE_TOP],
							HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
							HINGE_LEFT,			stHingeType[HINGE_LEFT],
							HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
							HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
							HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
							HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
							HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

values{2}	"iHingeType_2Horz"	HINGE_TOP,			stHingeType[HINGE_TOP],
								HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
								HINGE_LEFT,			stHingeType[HINGE_LEFT],
								HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
								HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
								HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
								HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
								HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

values{2}	"iHingeType_3Horz"	HINGE_TOP,			stHingeType[HINGE_TOP],
								HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
								HINGE_LEFT,			stHingeType[HINGE_LEFT],
								HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
								HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
								HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
								HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
								HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

values{2}	"iHingeType_2Vert"	HINGE_TOP,			stHingeType[HINGE_TOP],
								HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
								HINGE_LEFT,			stHingeType[HINGE_LEFT],
								HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
								HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
								HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
								HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
								HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

values{2}	"iHingeType_3Vert"	HINGE_TOP,			stHingeType[HINGE_TOP],
								HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
								HINGE_LEFT,			stHingeType[HINGE_LEFT],
								HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
								HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
								HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
								HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
								HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

!	 분할 패널 유형
!-----------------------------------------------------------------------------------------------
values	"iSepType"	1,	2,	3,	4,	5

values{2}	"iSepType_2Horz"	PNL_FIX,			stPnlType[PNL_FIX],
								PNL_PROJECT,		stPnlType[PNL_PROJECT],
								PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
								PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
								PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
								PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
								PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
								PNL_GRILL,			stPnlType[PNL_GRILL],
								PNL_OPEN,			stPnlType[PNL_OPEN]

values{2}	"iSepType_3Horz"	PNL_FIX,			stPnlType[PNL_FIX],
								PNL_PROJECT,		stPnlType[PNL_PROJECT],
								PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
								PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
								PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
								PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
								PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
								PNL_GRILL,			stPnlType[PNL_GRILL],
								PNL_OPEN,			stPnlType[PNL_OPEN]

values{2}	"iSepType_2Vert"	PNL_FIX,			stPnlType[PNL_FIX],
								PNL_PROJECT,		stPnlType[PNL_PROJECT],
								PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
								PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
								PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
								PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
								PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
								PNL_GRILL,			stPnlType[PNL_GRILL],
								PNL_OPEN,			stPnlType[PNL_OPEN]

values{2}	"iSepType_3Vert"	PNL_FIX,			stPnlType[PNL_FIX],
								PNL_PROJECT,		stPnlType[PNL_PROJECT],
								PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
								PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
								PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
								PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
								PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
								PNL_GRILL,			stPnlType[PNL_GRILL],
								PNL_OPEN,			stPnlType[PNL_OPEN]

!	 패널 선택
!-----------------------------------------------------------------------------------------------
dim	_iPosX[]
for	i = 1	to	(nMln + 1)
	_iPosX[i] = i
next	i
values	"iPosX" _iPosX

dim	_iPosY[]
for	i = 1	to	(nTrs + 1)
	_iPosY[i] = i
next	i
values	"iPosY" _iPosY

!	패널 유형 선택
values{2}	"iPnlType_"	PNL_FIX,			stPnlType[PNL_FIX],
						PNL_PROJECT,		stPnlType[PNL_PROJECT],
						PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
						PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
						PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
						PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
						PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
						PNL_GRILL,			stPnlType[PNL_GRILL],
						PNL_OPEN,			stPnlType[PNL_OPEN],
						PNL_SEP2_HORIZON,	stPnlType[PNL_SEP2_HORIZON],
						PNL_SEP3_HORIZON,	stPnlType[PNL_SEP3_HORIZON],
						PNL_SEP2_VERTICAL,	stPnlType[PNL_SEP2_VERTICAL],
						PNL_SEP3_VERTICAL,	stPnlType[PNL_SEP3_VERTICAL]

if	GLOB_MODPAR_NAME = "iPosX" | GLOB_MODPAR_NAME = "iPosY" | GLOB_MODPAR_NAME = "iPnlType"	then
	parameters	iPnlType_ = iPnlType[iPosX][iPosY]
else
	parameters	iPnlType[iPosX][iPosY] = iPnlType_
endif

!	프로젝트창 힌지 위치
values{2}	"iHingeType_"	HINGE_TOP,			stHingeType[HINGE_TOP],
							HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
							HINGE_LEFT,			stHingeType[HINGE_LEFT],
							HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
							HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
							HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
							HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
							HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

if	GLOB_MODPAR_NAME = "iPosX" | GLOB_MODPAR_NAME = "iPosY" | GLOB_MODPAR_NAME = "iHingeType"	then
	parameters	iHingeType_ = iHingeType[iPosX][iPosY]
else
	parameters	iHingeType[iPosX][iPosY] = iHingeType_
endif

if	not(iPnlType_ = PNL_PROJECT | iPnlType_ = PNL_PROJECT_SMOKE)	then
	lock	"iHingeType_"
endif

!	분할 패널 유형 선택
values	"iSepType_"	1,	2,	3,	4,	5

values{2}	"iSep1st"	PNL_FIX,			stPnlType[PNL_FIX],
						PNL_PROJECT,		stPnlType[PNL_PROJECT],
						PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
						PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
						PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
						PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
						PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
						PNL_GRILL,			stPnlType[PNL_GRILL],
						PNL_OPEN,			stPnlType[PNL_OPEN]

values{2}	"iSep2nd"	PNL_FIX,			stPnlType[PNL_FIX],
						PNL_PROJECT,		stPnlType[PNL_PROJECT],
						PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
						PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
						PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
						PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
						PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
						PNL_GRILL,			stPnlType[PNL_GRILL],
						PNL_OPEN,			stPnlType[PNL_OPEN]

values{2}	"iSep3rd"	PNL_FIX,			stPnlType[PNL_FIX],
						PNL_PROJECT,		stPnlType[PNL_PROJECT],
						PNL_PROJECT_SMOKE,	stPnlType[PNL_PROJECT_SMOKE],
						PNL_SPANDREL,		stPnlType[PNL_SPANDREL],
						PNL_SPANDREL_SUB,	stPnlType[PNL_SPANDREL_SUB],
						PNL_SPANDREL_SUB2,	stPnlType[PNL_SPANDREL_SUB2],
						PNL_SPANDREL_SUB3,	stPnlType[PNL_SPANDREL_SUB3],
						PNL_GRILL,			stPnlType[PNL_GRILL],
						PNL_OPEN,			stPnlType[PNL_OPEN]

values{2}	"iHinge1st"	HINGE_TOP,			stHingeType[HINGE_TOP],
						HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
						HINGE_LEFT,			stHingeType[HINGE_LEFT],
						HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
						HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
						HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
						HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
						HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

values{2}	"iHinge2nd"	HINGE_TOP,			stHingeType[HINGE_TOP],
						HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
						HINGE_LEFT,			stHingeType[HINGE_LEFT],
						HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
						HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
						HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
						HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
						HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

values{2}	"iHinge3rd"	HINGE_TOP,			stHingeType[HINGE_TOP],
						HINGE_BOTTOM,		stHingeType[HINGE_BOTTOM],
						HINGE_LEFT,			stHingeType[HINGE_LEFT],
						HINGE_RIGHT,		stHingeType[HINGE_RIGHT],
						HINGE_TOP_LEFT,		stHingeType[HINGE_TOP_LEFT],
						HINGE_TOP_RIGHT,	stHingeType[HINGE_TOP_RIGHT],
						HINGE_BOTTOM_LEFT,	stHingeType[HINGE_BOTTOM_LEFT],
						HINGE_BOTTOM_RIGHT,	stHingeType[HINGE_BOTTOM_RIGHT]

if	iPnlType_ = PNL_SEP2_HORIZON | iPnlType_ = PNL_SEP3_HORIZON | iPnlType_ = PNL_SEP2_VERTICAL | iPnlType_ = PNL_SEP3_VERTICAL	then
	if	iPnlType_ = PNL_SEP2_HORIZON | iPnlType_ = PNL_SEP2_VERTICAL	then
		lock	"iSep3rd", "iHinge3rd"
	endif

	if	GLOB_MODPAR_NAME = "iPosX" | GLOB_MODPAR_NAME = "iPosY" | GLOB_MODPAR_NAME = "iSepType"	then
		parameters	iSepType_ = iSepType[iPosX][iPosY]
	else
		parameters	iSepType[iPosX][iPosY] = iSepType_
	endif

	!	가로 분할
	if	iPnlType_ = PNL_SEP2_HORIZON	then
		if	GLOB_MODPAR_NAME = "iSep1st"	then
			parameters	iSepType_2Horz[iSepType_][1] = iSep1st
		else
			parameters	iSep1st = iSepType_2Horz[iSepType_][1]
		endif

		if	GLOB_MODPAR_NAME = "iSep2nd"	then
			parameters	iSepType_2Horz[iSepType_][2] = iSep2nd
		else
			parameters	iSep2nd = iSepType_2Horz[iSepType_][2]
		endif

		if	GLOB_MODPAR_NAME = "iHinge1st"	then
			parameters	iHingeType_2Horz[iSepType_][1] = iHinge1st
		else
			parameters	iHinge1st = iHingeType_2Horz[iSepType_][1]
		endif

		if	GLOB_MODPAR_NAME = "iHinge2nd"	then
			parameters	iHingeType_2Horz[iSepType_][2] = iHinge2nd
		else
			parameters	iHinge2nd = iHingeType_2Horz[iSepType_][2]
		endif
	endif

	if	iPnlType_ = PNL_SEP3_HORIZON	then
		if	GLOB_MODPAR_NAME = "iSep1st"	then
			parameters	iSepType_3Horz[iSepType_][1] = iSep1st
		else
			parameters	iSep1st = iSepType_3Horz[iSepType_][1]
		endif

		if	GLOB_MODPAR_NAME = "iSep2nd"	then
			parameters	iSepType_3Horz[iSepType_][2] = iSep2nd
		else
			parameters	iSep2nd = iSepType_3Horz[iSepType_][2]
		endif

		if	GLOB_MODPAR_NAME = "iSep3rd"	then
			parameters	iSepType_3Horz[iSepType_][3] = iSep3rd
		else
			parameters	iSep3rd = iSepType_3Horz[iSepType_][3]
		endif

		if	GLOB_MODPAR_NAME = "iHinge1st"	then
			parameters	iHingeType_3Horz[iSepType_][1] = iHinge1st
		else
			parameters	iHinge1st = iHingeType_3Horz[iSepType_][1]
		endif

		if	GLOB_MODPAR_NAME = "iHinge2nd"	then
			parameters	iHingeType_3Horz[iSepType_][2] = iHinge2nd
		else
			parameters	iHinge2nd = iHingeType_3Horz[iSepType_][2]
		endif

		if	GLOB_MODPAR_NAME = "iHinge3rd"	then
			parameters	iHingeType_3Horz[iSepType_][3] = iHinge3rd
		else
			parameters	iHinge3rd = iHingeType_3Horz[iSepType_][3]
		endif
	endif

	!	세로 분할
	if	iPnlType_ = PNL_SEP2_VERTICAL	then
		if	GLOB_MODPAR_NAME = "iSep1st"	then
			parameters	iSepType_2Vert[1][iSepType_] = iSep1st
		else
			parameters	iSep1st = iSepType_2Vert[1][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iSep2nd"	then
			parameters	iSepType_2Vert[2][iSepType_] = iSep2nd
		else
			parameters	iSep2nd = iSepType_2Vert[2][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iHinge1st"	then
			parameters	iHingeType_2Vert[1][iSepType_] = iHinge1st
		else
			parameters	iHinge1st = iHingeType_2Vert[1][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iHinge2nd"	then
			parameters	iHingeType_2Vert[2][iSepType_] = iHinge2nd
		else
			parameters	iHinge2nd = iHingeType_2Vert[2][iSepType_]
		endif
	endif

	if	iPnlType_ = PNL_SEP3_VERTICAL	then
		if	GLOB_MODPAR_NAME = "iSep1st"	then
			parameters	iSepType_3Vert[1][iSepType_] = iSep1st
		else
			parameters	iSep1st = iSepType_3Vert[1][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iSep2nd"	then
			parameters	iSepType_3Vert[2][iSepType_] = iSep2nd
		else
			parameters	iSep2nd = iSepType_3Vert[2][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iSep3rd"	then
			parameters	iSepType_3Vert[3][iSepType_] = iSep3rd
		else
			parameters	iSep3rd = iSepType_3Vert[3][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iHinge1st"	then
			parameters	iHingeType_3Vert[1][iSepType_] = iHinge1st
		else
			parameters	iHinge1st = iHingeType_3Vert[1][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iHinge2nd"	then
			parameters	iHingeType_3Vert[2][iSepType_] = iHinge2nd
		else
			parameters	iHinge2nd = iHingeType_3Vert[2][iSepType_]
		endif

		if	GLOB_MODPAR_NAME = "iHinge3rd"	then
			parameters	iHingeType_3Vert[3][iSepType_] = iHinge3rd
		else
			parameters	iHinge3rd = iHingeType_3Vert[3][iSepType_]
		endif
	endif

	!	힌지 위치 변수 잠금
	if	not(iSep1st = PNL_PROJECT | iSep1st = PNL_PROJECT_SMOKE)	then
		lock	"iHinge1st"
	endif

	if	not(iSep2nd = PNL_PROJECT | iSep2nd = PNL_PROJECT_SMOKE)	then
		lock	"iHinge2nd"
	endif

	if	not(iSep3rd = PNL_PROJECT | iSep3rd = PNL_PROJECT_SMOKE)	then
		lock	"iHinge3rd"
	endif
else
	parameters	iPagePnl = 2
	lock	"iPagePnl"

	lock	"iSepType_", "iSep1st", "iSep2nd", "iSep3rd", "iHinge1st", "iHinge2nd", "iHinge3rd"
endif

	!	분할 프레임 위치 기본값
	for	i = 1	to	41
		for	j = 1	to	41
			if	sep2_Horz[i][j] < eps	then
				parameters	sep2_Horz[i][j] = 0.250
			endif
			if	sep3_Horz[i][j] < eps	then
				parameters	sep3_Horz[i][j] = 0.550
			endif

			if	sep2_Vert[i][j] < eps	then
				parameters	sep2_Vert[i][j] = 0.150
			endif
			if	sep3_Vert[i][j] < eps	then
				parameters	sep3_Vert[i][j] = 0.350
			endif
		next	j
	next	i

!	제한값
_offsetValue = 0.100

for	i = 1	to	41
	for	j = 1	to	41
		!	분할 프레임(가로)
		_value = sep2_Horz[i][j]
		_minValue = 0
		_maxValue = mlnGap[i]

		if	_value - _minValue < _offsetValue	then
			parameters	sep2_Horz[i][j] = _offsetValue
		endif
		if	_maxValue - _value < _offsetValue	then
			parameters	sep2_Horz[i][j] = _maxValue - _offsetValue
		endif

		!	분할 프레임(세로)
		_value = sep2_Vert[i][j]
		_minValue = 0
		_maxValue = trsGap[j]

		if	_value - _minValue < _offsetValue	then
			parameters	sep2_Vert[i][j] = _offsetValue
		endif
		if	_maxValue - _value < _offsetValue	then
			parameters	sep2_Vert[i][j] = _maxValue - _offsetValue
		endif
	next	j
next	i

for	i = 1	to	41
	for	j = 1	to	41
		if	iPnlType[i][j] = PNL_SEP3_HORIZON	then
			_value1 = sep2_Horz[i][j]
			_value2 = sep3_Horz[i][j]
			_minValue = 0
			_maxValue = mlnGap[i]

			if	_value1 - _minValue < _offsetValue	then
				parameters	sep2_Horz[i][j] = _offsetValue
			endif
			if	_value2 - _value1 < _offsetValue	then
				if	GLOB_MODPAR_NAME = "sep2_Horz"	then
					parameters	sep2_Horz[i][j] = _value2 - _offsetValue,
								sep3_Horz[i][j] = _value2
				endif
				if	GLOB_MODPAR_NAME = "sep3_Horz"	then
					parameters	sep2_Horz[i][j] = _value1,
								sep3_Horz[i][j] = _value1 + _offsetValue
				endif
			endif
			if	_maxValue - _value2 < _offsetValue	then
				parameters	sep3_Horz[i][j] = _maxValue - _offsetValue
			endif
		endif

		if	iPnlType[i][j] = PNL_SEP3_VERTICAL	then
			_value1 = sep2_Vert[i][j]
			_value2 = sep3_Vert[i][j]
			_minValue = 0
			_maxValue = trsGap[j]

			if	_value1 - _minValue < _offsetValue	then
				parameters	sep2_Vert[i][j] = _offsetValue
			endif
			if	_value2 - _value1 < _offsetValue	then
				if	GLOB_MODPAR_NAME = "sep2_Vert"	then
					parameters	sep2_Vert[i][j] = _value2 - _offsetValue,
								sep3_Vert[i][j] = _value2
				endif
				if	GLOB_MODPAR_NAME = "sep3_Vert"	then
					parameters	sep2_Vert[i][j] = _value1,
								sep3_Vert[i][j] = _value1 + _offsetValue
				endif
			endif
			if	_maxValue - _value2 < _offsetValue	then
				parameters	sep3_Vert[i][j] = _maxValue - _offsetValue
			endif
		endif
	next	j
next	i

!	Floor Plan Display
!-----------------------------------------------------------------------------------------------
values{2}	"iDisplay"	DISPLAY_PROJECTED,		stDisplay[DISPLAY_PROJECTED],
						DISPLAY_WITHOVERHEAD,	stDisplay[DISPLAY_WITHOVERHEAD],
						DISPLAY_OUTLINES,		stDisplay[DISPLAY_OUTLINES],
						DISPLAY_OVERHEAD,		stDisplay[DISPLAY_OVERHEAD],
						DISPLAY_SYMBOLIC,		stDisplay[DISPLAY_SYMBOLIC]

!	Show Projection To
!-----------------------------------------------------------------------------------------------
values{2}	"iProjectTo"	PROJECTTO_FLOORPLAN,	stProjectTo[PROJECTTO_FLOORPLAN],
							PROJECTTO_ABSOLUTE,		stProjectTo[PROJECTTO_ABSOLUTE],
							PROJECTTO_ENTIRE,		stProjectTo[PROJECTTO_ENTIRE]


!-----------------------------------------------------------------------------------------------
!	문
!-----------------------------------------------------------------------------------------------
values	"doorWdtL"	range	(0,	doorWdt)
values	"doorWdtR"	range	(0,	)
values	"doorThk"	range	(0,	0.200]
values	"fixWdtL"	0,	range	[0.100,	)
values	"fixWdtR"	0,	range	[0.100,	)

values	"frmT"	range	(0,	)
values	"frmB"	range	(0,	)
values	"frmL"	range	(0,	)
values	"frmR"	range	(0,	)

!	좌/우 코너프레임에 각도가 있는 경우, 문 ON 불가
!-----------------------------------------------------------------------------------------------
if	nMln < eps	then
	if	(iFrmTypeL = FRAME_MULLION & abs(aFrmL) > eps) | (iFrmTypeR = FRAME_MULLION & abs(aFrmR) > eps)	then
		parameters	bDoor[1] = 0
	endif
else
	for	i = 1	to	(nMln + 1)
		if	(i = 1) & (iFrmTypeL = FRAME_MULLION & abs(aFrmL) > eps)	then
			parameters	bDoor[i] = 0
		endif
		if	(i = (nMln + 1)) & (iFrmTypeR = FRAME_MULLION & abs(aFrmR) > eps)	then
			parameters	bDoor[i] = 0
		endif
	next	i
endif

!	편집할 문 선택
!-----------------------------------------------------------------------------------------------
dim	_iEditDoor[],	_stEditDoor[]
_nDoor = 0
for	i = 1	to	nMln + 1
	if	bDoor[i]	then
		_nDoor = _nDoor + 1
		_iEditDoor[_nDoor] = i
	endif
next	i

if	_nDoor < eps	then
	_iEditDoor[1] = 1
	_stEditDoor[1] = "None"

	values{2}	"iEditDoor"	_iEditDoor,	_stEditDoor

	!	문 관련 변수 잠금
	lock	"iEditDoor", "iDoorType", "iOpenType", "iOpenDirect", "iFrameType",	"iSymbol",	\
			"doorWdt", "bEqual", "doorWdtL", "doorWdtR", "doorHgt", "doorThk", "fixWdtL", "fixWdtR",	\
			"frmT", "frmB", "frmL", "frmR"
else
	values	"iEditDoor"	_iEditDoor

	parameters	bFrmB = 1
	lock	"bFrmB"
endif

!	멀리언 개수+1 이상의 문은 전부 Off
!-----------------------------------------------------------------------------------------------
if	nMln < 40	then
	for	i = (nMln + 2)	to	41
		parameters	bDoor[i] = 0
	next	i
endif


!	문 유형
!-----------------------------------------------------------------------------------------------
values{2}	"iDoorType"	DOOR_1PANEL,	stDoorType[DOOR_1PANEL],
						DOOR_2PANEL,	stDoorType[DOOR_2PANEL]

if	iDoorType = DOOR_1PANEL	then
	lock	"doorWdtL", "bEqual"
endif

if	iDoorType = DOOR_2PANEL	then
	lock	"iOpenDirect"
endif

!	문 열림유형
!-----------------------------------------------------------------------------------------------
values{2}	"iOpenType"	OPENTYPE_HINGE,	stOpenType[OPENTYPE_HINGE],
						OPENTYPE_SLIDE,	stOpenType[OPENTYPE_SLIDE]

if	iOpenType = OPENTYPE_SLIDE	then
	parameters	bEqual = 1
	lock	"doorWdtL", "bEqual"
endif

!	문 열림방향
!-----------------------------------------------------------------------------------------------
values{2}	"iOpenDirect"	OPENDIRECT_LEFT,	stOpenDirect[OPENDIRECT_LEFT],
							OPENDIRECT_RIGHT,	stOpenDirect[OPENDIRECT_RIGHT]

!	문 프레임유형
!-----------------------------------------------------------------------------------------------
values{2}	"iFrameType"	FRAME_TYPE1,	stFrameType[FRAME_TYPE1],
							FRAME_TYPE2,	stFrameType[FRAME_TYPE2]

if	iFrameType = FRAME_TYPE1	then
	lock	"frmL", "frmR"
endif

!	문 심볼 위치
!-----------------------------------------------------------------------------------------------
if	iOpenType = OPENTYPE_HINGE	then
	values{2}	"iSymbol"	SYMBOL_FRONT,	stSymbol[SYMBOL_FRONT],
							SYMBOL_BACK,	stSymbol[SYMBOL_BACK],
							SYMBOL_ALL,		stSymbol[SYMBOL_ALL]
endif
if	iOpenType = OPENTYPE_SLIDE	then
	values{2}	"iSymbol"	SYMBOL_FRONT,	stSymbol[SYMBOL_FRONT],
							SYMBOL_BACK,	stSymbol[SYMBOL_BACK]
endif

!	iM_Type(문 유형 설정)
!-----------------------------------------------------------------------------------------------
if	GLOB_MODPAR_NAME = "iDoorType"	then
	parameters	iM_Type[iEditDoor][1] = iDoorType
else
	parameters	iDoorType = iM_Type[iEditDoor][1]
endif

if	GLOB_MODPAR_NAME = "iOpenType"	then
	parameters	iM_Type[iEditDoor][2] = iOpenType
else
	parameters	iOpenType = iM_Type[iEditDoor][2]
endif

if	GLOB_MODPAR_NAME = "iOpenDirect"	then
	parameters	iM_Type[iEditDoor][3] = iOpenDirect
else
	parameters	iOpenDirect = iM_Type[iEditDoor][3]
endif

if	GLOB_MODPAR_NAME = "iFrameType"	then
	parameters	iM_Type[iEditDoor][4] = iFrameType
else
	parameters	iFrameType = iM_Type[iEditDoor][4]
endif

if	GLOB_MODPAR_NAME = "iSymbol"	then
	parameters	iM_Type[iEditDoor][5] = iSymbol
else
	parameters	iSymbol = iM_Type[iEditDoor][5]
endif

if	GLOB_MODPAR_NAME = "iEditDoor"	then
	parameters	iDoorType = iM_Type[iEditDoor][1],
				iOpenType = iM_Type[iEditDoor][2],
				iOpenDirect = iM_Type[iEditDoor][3],
				iFrameType = iM_Type[iEditDoor][4],
				iSymbol = iM_Type[iEditDoor][5]
else
	parameters	iM_Type[iEditDoor][1] = iDoorType,
				iM_Type[iEditDoor][2] = iOpenType,
				iM_Type[iEditDoor][3] = iOpenDirect,
				iM_Type[iEditDoor][4] = iFrameType,
				iM_Type[iEditDoor][5] = iSymbol
endif


!	iM_Length(문 형태 설정)
!-----------------------------------------------------------------------------------------------
values	"iM_Length"	range	[0,	]

!	문 너비 자동 계산
lock	"doorWdt"
for	i = 1	to	(nMln + 1)
	_doorWdt = 0
	if	iFrmTypeL = FRAME_BOUNDARY	then
		_offsetFrmL = frmWdtL
	else
		_offsetFrmL = frmWdtL/2
	endif
	if	iFrmTypeR = FRAME_BOUNDARY	then
		_offsetFrmR = frmWdtR
	else
		_offsetFrmR = frmWdtR/2
	endif

	if	nMln < eps	then
		_doorWdt = mlnGap[i] - (_offsetFrmL + _offsetFrmR)
		_offsetL = _offsetFrmL
		_offsetR = _offsetFrmR
	else
		if	i = 1	then
			_doorWdt = mlnGap[i] - (_offsetFrmL + mlnWdt/2)
			_offsetL = _offsetFrmL
			_offsetR = mlnWdt/2
		endif
		if	i # 1 & i # (nMln + 1)	then
			_doorWdt = mlnGap[i] - mlnWdt
			_offsetL = mlnWdt/2
			_offsetR = mlnWdt/2
		endif
		if	i = (nMln + 1)	then
			_doorWdt = mlnGap[i] - (_offsetFrmR + mlnWdt/2)
			_offsetL = mlnWdt/2
			_offsetR = _offsetFrmR
		endif
	endif

	!	고정창 너비
	_fixWdtL = iM_Length[i][6]
	_fixWdtR = iM_Length[i][7]
	if	_fixWdtL > eps	then	_doorWdt = _doorWdt - (mlnWdt/2 + _fixWdtL) + _offsetL
	if	_fixWdtR > eps	then	_doorWdt = _doorWdt - (mlnWdt/2 + _fixWdtR) + _offsetR

	parameters	iM_Length[i][1] = _doorWdt

	if	i = iEditDoor	then
		if	bEqual	then
			parameters	doorWdt = _doorWdt,
						doorWdtL = _doorWdt/2,
						doorWdtR = _doorWdt/2
		else
			parameters	doorWdt = _doorWdt,
						doorWdtR = _doorWdt - doorWdtL
		endif
	endif

	! if	i = iEditDoor	then
		if	bM_Equal[i]	then
			parameters	iM_Length[i][1] = _doorWdt,
						iM_Length[i][2] = _doorWdt/2,
						iM_Length[i][3] = _doorWdt/2
		else
			parameters	iM_Length[i][1] = _doorWdt,
						iM_Length[i][3] = _doorWdt - iM_Length[i][2]
		endif
	! endif
next	i

!	좌/우측 문 너비
lock	"doorWdtR"

!	문 높이 자동계산
lock	"doorHgt"

_doorHgt = 0
if	nTrs < eps	then
	_doorHgt = trsGap[1] - frmWdtT
else
	_doorHgt = trsGap[1] - trsWdt/2
endif

for	i = 1	to	41
	parameters	iM_Length[i][4] = _doorHgt,
				doorHgt = _doorHgt
next	i

!	설정창에서
if	GLOB_PREVIEW_MODE	then
	!	문 두께
	if	GLOB_MODPAR_NAME = "doorThk"	then
		parameters	iM_Length[iEditDoor][5] = doorThk
	else
		parameters	doorThk = iM_Length[iEditDoor][5]
	endif

	!	고정창 너비
	if	GLOB_MODPAR_NAME = "fixWdtL"	then
		parameters	iM_Length[iEditDoor][6] = fixWdtL
	else
		parameters	fixWdtL = iM_Length[iEditDoor][6]
	endif

	if	GLOB_MODPAR_NAME = "fixWdtR"	then
		parameters	iM_Length[iEditDoor][7] = fixWdtR
	else
		parameters	fixWdtR = iM_Length[iEditDoor][7]
	endif

	!	Edit
	if	GLOB_MODPAR_NAME = "iEditDoor"	then
		parameters	doorWdt = iM_Length[iEditDoor][1],
					doorWdtL = iM_Length[iEditDoor][2],
					doorWdtR = iM_Length[iEditDoor][3],
					doorHgt = iM_Length[iEditDoor][4],
					doorThk = iM_Length[iEditDoor][5]
	else
		parameters	iM_Length[iEditDoor][1] = doorWdt,
					iM_Length[iEditDoor][2] = doorWdtL,
					iM_Length[iEditDoor][3] = doorWdtR,
					iM_Length[iEditDoor][4] = doorHgt
	endif
endif

	!	fixWdtL/fixWdtR 제한값
	if	GLOB_MODPAR_NAME = "iM_Length"	then
		for	i = 1	to	(nMln + 1)
			if	nMln > eps	then
				if	iM_Length[i][6] - 0.100 < eps	then
					parameters	iM_Length[i][6] = 0
				endif
			endif
			if	(mlnGap[i] - iM_Length[i][7] - 0.200) - iM_Length[i][6] < eps	then
				parameters	iM_Length[i][6] = mlnGap[i] - iM_Length[i][7] - 0.200
			endif

			if	nMln > eps	then
				if	iM_Length[i][7] - 0.100 < eps	then
					parameters	iM_Length[i][7] = 0
				endif
			endif
			if	(mlnGap[i] - iM_Length[i][6] - 0.200) - iM_Length[i][7] < eps	then
				parameters	iM_Length[i][7] = mlnGap[i] - iM_Length[i][6] - 0.200
			endif
		next	i
	endif


!	iM_Frame(문 프레임 설정)
!-----------------------------------------------------------------------------------------------
if	GLOB_MODPAR_NAME = "frmL"	then
	parameters	iM_Frame[iEditDoor][1] = frmL
else
	parameters	frmL = iM_Frame[iEditDoor][1]
endif

if	GLOB_MODPAR_NAME = "frmR"	then
	parameters	iM_Frame[iEditDoor][2] = frmR
else
	parameters	frmR = iM_Frame[iEditDoor][2]
endif

if	GLOB_MODPAR_NAME = "frmT"	then
	parameters	iM_Frame[iEditDoor][3] = frmT
else
	parameters	frmT = iM_Frame[iEditDoor][3]
endif

if	GLOB_MODPAR_NAME = "frmB"	then
	parameters	iM_Frame[iEditDoor][4] = frmB
else
	parameters	frmB = iM_Frame[iEditDoor][4]
endif

if	GLOB_MODPAR_NAME = "iEditDoor"	then
	parameters	frmL = iM_Frame[iEditDoor][1],
				frmR = iM_Frame[iEditDoor][2],
				frmT = iM_Frame[iEditDoor][3],
				frmB = iM_Frame[iEditDoor][4]
else
	parameters	iM_Frame[iEditDoor][1] = frmL,
				iM_Frame[iEditDoor][2] = frmR,
				iM_Frame[iEditDoor][3] = frmT,
				iM_Frame[iEditDoor][4] = frmB
endif


!	bM_Equal(문 너비 동일하게)
!-----------------------------------------------------------------------------------------------
if	GLOB_MODPAR_NAME = "bEqual"	then
	parameters	bM_Equal[iEditDoor] = bEqual
else
	! parameters	bEqual = bM_Equal[iEditDoor]
endif
if	GLOB_MODPAR_NAME = "iEditDoor"	then
	parameters	bEqual = bM_Equal[iEditDoor]
else
	parameters	bM_Equal[iEditDoor] = bEqual
endif

if	bEqual	then
	lock	"doorWdtL"
endif

!	UI
!-----------------------------------------------------------------------------------------------
values	"iPagePnl"	1, 2
values	"iPageFrm"	1, 2, 3, 4
values	"iPageDoor"	1, 2


!-----------------------------------------------------------------------------------------------
!	면적 산출
!-----------------------------------------------------------------------------------------------
	!	변수 정의
	!-----------------------------------------------------------------------------------------------
	if	iFrmTypeL = FRAME_BOUNDARY	then
		_offsetL_PNL = (frmWdtL + gskWdtL)/2
	else
		if	abs(aFrmL) < eps	then
			_offsetL_PNL = gskWdtL/2
		else
			if	aFrmL > (300 - eps)	then
				_addPnlL = -gskWdtL/2 + glsThk/tan(aFrmL)
			else
				_addPnlL = -gskWdtL/2
			endif

			_offsetL_PNL = gskWdtL/2 + _addPnlL
		endif
	endif

	if	iFrmTypeR = FRAME_BOUNDARY	then
		_offsetR_PNL = (frmWdtR + gskWdtR)/2
	else
		if	abs(aFrmR) < eps	then
			_offsetR_PNL = gskWdtR/2
		else
			if	aFrmL > (300 - eps)	then
				_addPnlR = -gskWdtR/2 + glsThk/tan(aFrmR)
			else
				_addPnlR = -gskWdtR/2
			endif

			_offsetR_PNL = gskWdtR/2 + _addPnlR
		endif
	endif

	_glsArea = 0
	_glsArea_Spd1 = 0
	_glsArea_Spd2 = 0
	_glsArea_Spd3 = 0
	_glsArea_Spd4 = 0

	_nCount = 0

	!	창호 면적 계산
	!-----------------------------------------------------------------------------------------------
	for	i = 1	to	(nMln + 1)
		for	j = 1	to	(nTrs + 1)

			!	변수 정의
			_pnlType = iPnlType[i][j]
			_hingeType = iHingeType[i][j]

			_bDoor = (bDoor[i] & j = 1)
			_bPanel = not(_bDoor)
			_bSingle = (_pnlType = PNL_FIX | _pnlType = PNL_PROJECT | _pnlType = PNL_PROJECT_SMOKE | _pnlType = PNL_SPANDREL | \
						_pnlType = PNL_SPANDREL_SUB | _pnlType = PNL_SPANDREL_SUB2 | _pnlType = PNL_SPANDREL_SUB3 | _pnlType = PNL_GRILL)

			!	패널 너비
			_pnlWdt = 0

			if	nMln < eps	then
				_pnlWdt = mlnGap[i] - (_offsetL_PNL + _offsetR_PNL)
			else
				if	i = 1	then
					_pnlWdt = mlnGap[i] - (_offsetL_PNL + mlnGskWdt/2)
				endif
				if	i # 1 & i # (nMln + 1)	then
					_pnlWdt = mlnGap[i] - mlnGskWdt
				endif
				if	i = (nMln + 1)	then
					_pnlWdt = mlnGap[i] - (_offsetR_PNL + mlnGskWdt/2)
				endif
			endif

			!	패널 높이
			_pnlHgt = 0

			if	nTrs < eps	then
				_pnlHgt = trsGap[j] - ((frmWdtB + gskWdtB)/2 + (frmWdtT + gskWdtT)/2)
				_etcHgt = trsGap[j] - (frmWdtB + frmWdtT)
			else
				if	j = 1	then
					_pnlHgt = trsGap[j] - ((frmWdtB + gskWdtB)/2 + trsGskWdt/2)
				endif
				if	j # 1 & j # (nTrs + 1)	then
					_pnlHgt = trsGap[j] - trsGskWdt
				endif
				if	j = (nTrs + 1)	then
					_pnlHgt = trsGap[j] - ((frmWdtT + gskWdtT)/2 + trsGskWdt/2)
				endif
			endif

			!	단일 창호 면적 계산
			if	_bPanel & _bSingle	then
				gosub	"calc_glsArea"
			endif

			!	복합 창호 면적 계산
			if	_bPanel & not(_bSingle)	then
				!	2분할 패널 유형(가로)
				if	_pnlType = PNL_SEP2_HORIZON	then
					!	변수정의
					_idx = iSepType[i][j]
					_pnlType1 = iSepType_2Horz[_idx][1]
					_pnlType2 = iSepType_2Horz[_idx][2]

					_pnlWdt1 = 0
					_pnlWdt2 = 0

					if	nMln < eps	then
						_pnlWdt1 = sep2_Horz[i][j] - (_offsetL_PNL + mlnGskWdt/2)
						_pnlWdt2 = (mlnGap[i] - sep2_Horz[i][j]) - (_offsetR_PNL + mlnGskWdt/2)
					else
						if	i = 1	then
							_pnlWdt1 = sep2_Horz[i][j] - (_offsetL_PNL + mlnGskWdt/2)
							_pnlWdt2 = (mlnGap[i] - sep2_Horz[i][j]) - mlnGskWdt
						endif
						if	i # 1 & i # (nMln + 1)	then
							_pnlWdt1 = sep2_Horz[i][j] - mlnGskWdt
							_pnlWdt2 = (mlnGap[i] - sep2_Horz[i][j]) - mlnGskWdt
						endif
						if	i = (nMln + 1)	then
							_pnlWdt1 = sep2_Horz[i][j] - mlnGskWdt
							_pnlWdt2 = (mlnGap[i] - sep2_Horz[i][j]) - (_offsetR_PNL + mlnGskWdt/2)
						endif
					endif

					!	1번 영역
					_pnlType = _pnlType1
					_pnlWdt = _pnlWdt1

					gosub	"calc_glsArea"

					!	2번 영역
					_pnlType = _pnlType2
					_pnlWdt = _pnlWdt2

					gosub	"calc_glsArea"
				endif

				!	3분할 패널 유형(가로)
				if	_pnlType = PNL_SEP3_HORIZON	then
					!	변수정의
					_idx = iSepType[i][j]
					_pnlType1 = iSepType_3Horz[_idx][1]
					_pnlType2 = iSepType_3Horz[_idx][2]
					_pnlType3 = iSepType_3Horz[_idx][3]

					_pnlWdt1 = 0
					_pnlWdt2 = 0
					_pnlWdt3 = 0

					if	nMln < eps	then
						_pnlWdt1 = sep2_Horz[i][j] - (_offsetL_PNL + mlnGskWdt/2)
						_pnlWdt2 = (sep3_Horz[i][j] - sep2_Horz[i][j]) - mlnGskWdt
						_pnlWdt3 = (mlnGap[i] - sep3_Horz[i][j]) - (_offsetR_PNL + mlnGskWdt/2)
					else
						if	i = 1	then
							_pnlWdt1 = sep2_Horz[i][j] - (_offsetL_PNL + mlnGskWdt/2)
							_pnlWdt2 = (sep3_Horz[i][j] - sep2_Horz[i][j]) - mlnGskWdt
							_pnlWdt3 = (mlnGap[i] - sep3_Horz[i][j]) - mlnGskWdt
						endif
						if	i # 1 & i # (nMln + 1)	then
							_pnlWdt1 = sep2_Horz[i][j] - mlnGskWdt
							_pnlWdt2 = (sep3_Horz[i][j] - sep2_Horz[i][j]) - mlnGskWdt
							_pnlWdt3 = (mlnGap[i] - sep3_Horz[i][j]) - mlnGskWdt
						endif
						if	i = (nMln + 1)	then
							_pnlWdt1 = sep2_Horz[i][j] - mlnGskWdt
							_pnlWdt2 = (sep3_Horz[i][j] - sep2_Horz[i][j]) - mlnGskWdt
							_pnlWdt3 = (mlnGap[i] - sep3_Horz[i][j]) - (_offsetR_PNL + mlnGskWdt/2)
						endif
					endif

					!	1번 영역
					_pnlType = _pnlType1
					_pnlWdt = _pnlWdt1

					gosub	"calc_glsArea"

					!	2번 영역
					_pnlType = _pnlType2
					_pnlWdt = _pnlWdt2

					gosub	"calc_glsArea"

					!	3번 영역
					_pnlType = _pnlType3
					_pnlWdt = _pnlWdt3

					gosub	"calc_glsArea"
				endif

				!	2분할 패널 유형(세로)
				if	_pnlType = PNL_SEP2_VERTICAL	then
					!	변수정의
					_idx = iSepType[i][j]
					_pnlType1 = iSepType_2Vert[1][_idx]
					_pnlType2 = iSepType_2Vert[2][_idx]

					_pnlHgt1 = 0
					_pnlHgt2 = 0

					if	nTrs < eps	then
						_pnlHgt1 = sep2_Vert[i][j] - ((frmWdtB + gskWdtB)/2 + trsGskWdt/2)
						_pnlHgt2 = (trsGap[j] - sep2_Vert[i][j]) - ((frmWdtT + gskWdtT)/2 + trsGskWdt/2)
					else
						if	j = 1	then
							_pnlHgt1 = sep2_Vert[i][j] - ((frmWdtB + gskWdtB)/2 + trsGskWdt/2)
							_pnlHgt2 = (trsGap[j] - sep2_Vert[i][j]) - trsGskWdt
						endif
						if	j # 1 & j # (nTrs + 1)	then
							_pnlHgt1 = sep2_Vert[i][j] - trsGskWdt
							_pnlHgt2 = (trsGap[j] - sep2_Vert[i][j]) - trsGskWdt
						endif
						if	j = (nTrs + 1)	then
							_pnlHgt1 = sep2_Vert[i][j] - trsGskWdt
							_pnlHgt2 = (trsGap[j] - sep2_Vert[i][j]) - ((frmWdtT + gskWdtT)/2 + trsGskWdt/2)
						endif
					endif

					!	1번 영역
					_pnlType = _pnlType1
					_pnlHgt = _pnlHgt1

					gosub	"calc_glsArea"

					!	2번 영역
					_pnlType = _pnlType2
					_pnlHgt = _pnlHgt2

					gosub	"calc_glsArea"
				endif

				!	3분할 패널 유형(세로)
				if	_pnlType = PNL_SEP3_VERTICAL	then
					!	변수정의
					_idx = iSepType[i][j]
					_pnlType1 = iSepType_3Vert[1][_idx]
					_pnlType2 = iSepType_3Vert[2][_idx]
					_pnlType3 = iSepType_3Vert[3][_idx]

					_pnlHgt1 = 0
					_pnlHgt2 = 0
					_pnlHgt3 = 0

					if	nTrs < eps	then
						_pnlHgt1 = sep2_Vert[i][j] - ((frmWdtB + gskWdtB)/2 + trsGskWdt/2)
						_pnlHgt2 = (sep3_Vert[i][j] - sep2_Vert[i][j]) - trsGskWdt
						_pnlHgt3 = (trsGap[j] - sep3_Vert[i][j]) - ((frmWdtT + gskWdtT)/2 + trsGskWdt/2)
					else
						if	j = 1	then
							_pnlHgt1 = sep2_Vert[i][j] - ((frmWdtB + gskWdtB)/2 + trsGskWdt/2)
							_pnlHgt2 = (sep3_Vert[i][j] - sep2_Vert[i][j]) - trsGskWdt
							_pnlHgt3 = (trsGap[j] - sep3_Vert[i][j]) - trsGskWdt
						endif
						if	j # 1 & j # (nTrs + 1)	then
							_pnlHgt1 = sep2_Vert[i][j] - trsGskWdt
							_pnlHgt2 = (sep3_Vert[i][j] - sep2_Vert[i][j]) - trsGskWdt
							_pnlHgt3 = (trsGap[j] - sep3_Vert[i][j]) - trsGskWdt
						endif
						if	j = (nTrs + 1)	then
							_pnlHgt1 = sep2_Vert[i][j] - trsGskWdt
							_pnlHgt2 = (sep3_Vert[i][j] - sep2_Vert[i][j]) - trsGskWdt
							_pnlHgt3 = (trsGap[j] - sep3_Vert[i][j]) - ((frmWdtT + gskWdtT)/2 + trsGskWdt/2)
						endif
					endif

					!	1번 영역
					_pnlType = _pnlType1
					_pnlHgt = _pnlHgt1

					gosub	"calc_glsArea"

					!	2번 영역
					_pnlType = _pnlType2
					_pnlHgt = _pnlHgt2

					gosub	"calc_glsArea"

					!	3번 영역
					_pnlType = _pnlType3
					_pnlHgt = _pnlHgt3

					gosub	"calc_glsArea"
				endif
			endif

		next	j
	next	i

	!	문-고정창 면적 계산
	!-----------------------------------------------------------------------------------------------
	for	i = 1	to	(nMln + 1)
		!	변수 정의
		_bDoor = bDoor[i]

		_doorType = iM_Type[i][1]
		_frameType = iM_Type[i][4]

		_doorWdt = iM_Length[i][1]
		_doorHgt = iM_Length[i][4]
		_fixWdtL = iM_Length[i][6]
		_fixWdtR = iM_Length[i][7]

		_frmL = iM_Frame[i][1]
		_frmR = iM_Frame[i][2]
		_frmT = iM_Frame[i][3]
		_frmB = iM_Frame[i][4]

		if	_bDoor	then
			!	좌/우 고정창 공통 변수
			_dGlsHgt = trsGap[1] - (frmWdtB + gskWdtB)/2
			if	nTrs < eps	then
				_dGlsHgt = _dGlsHgt - (frmWdtT + gskWdtT)/2
			else
				_dGlsHgt = _dGlsHgt - trsGskWdt/2
			endif

			!	좌측 고정창 유리 면적 계산
			if	_fixWdtL > eps	then
				_pnlWdt = _fixWdtL
				if	nMln < eps	then
					if	iFrmTypeL = FRAME_BOUNDARY	then
						_pnlWdt = _pnlWdt - (frmWdtL + gskWdtL)/2
					else
						_pnlWdt = _pnlWdt - gskWdtL/2
					endif

					_pnlWdt = _pnlWdt - mlnGskWdt/2
				else
					if	i = 1	then
						if	iFrmTypeL = FRAME_BOUNDARY	then
							_pnlWdt = _pnlWdt - (frmWdtL + gskWdtL)/2
						else
							_pnlWdt = _pnlWdt - gskWdtL/2
						endif

						_pnlWdt = _pnlWdt - mlnGskWdt/2
					else
						_pnlWdt = _pnlWdt - mlnGskWdt
					endif
				endif

				_glsArea = _glsArea + _pnlWdt*_dGlsHgt	:	_nCount = _nCount + 1
			endif

			!	우측 고정창 유리 면적 계산
			if	_fixWdtR > eps	then
				_pnlWdt = _fixWdtR
				if	nMln < eps	then
					_pnlWdt = _pnlWdt - ((frmWdtR + gskWdtR)/2 + mlnGskWdt/2)
				else
					if	i = (nMln + 1)	then
						_pnlWdt = _pnlWdt - ((frmWdtR + gskWdtR)/2 + mlnGskWdt/2)
					else
						_pnlWdt = _pnlWdt - mlnGskWdt
					endif
				endif

				_glsArea = _glsArea + _pnlWdt*_dGlsHgt	:	_nCount = _nCount + 1
			endif

			!	 문 유형에 따른 유리 면적(전체 문 면적 - 프레임 면적)
			_glsArea = _glsArea + _doorWdt*_doorHgt	:	_nCount = _nCount + 1
				!	문 유형 : 기본형(1Panel)
				if	_doorType = DOOR_1PANEL	then
					if	_frameType = FRAME_TYPE1	then
						_glsArea = _glsArea - _doorWdt*(_frmB +_frmT)
					endif

					if	_frameType = FRAME_TYPE2	then
						_glsArea = _glsArea - (_doorHgt - (_frmB + _frmT))*(_frmL + _frmR)
					endif
				endif

				!	문 유형 : 양문형(2Panel)
				if	_doorType = DOOR_2PANEL	then
					if	_frameType = FRAME_TYPE1	then
						_glsArea = _glsArea - _doorWdt*(_frmB +_frmT)
					endif

					if	_frameType = FRAME_TYPE2	then
						_glsArea = _glsArea - (_doorHgt - (_frmB + _frmT))*(_frmL + _frmR)*2
					endif
				endif
		endif
	next	i



	!	변수 입력
	!-----------------------------------------------------------------------------------------------
	parameters	glsArea = _glsArea,
				glsArea_Spd1 = _glsArea_Spd1,
				glsArea_Spd2 = _glsArea_Spd2,
				glsArea_Spd3 = _glsArea_Spd3,
				glsArea_Spd4 = _glsArea_Spd4

	parameters	nCount = _nCount

	!	변수 잠금 및 숨기기
	!-----------------------------------------------------------------------------------------------
	lock	"glsArea", "glsArea_Spd1", "glsArea_Spd2", "glsArea_Spd3", "glsArea_Spd4"

	hideparameter	"nCount"





end

!-----------------------------------------------------------------------------------------------
"calc_glsArea":	!	유리면적 계산
!-----------------------------------------------------------------------------------------------
	!	일반 유리
	if	_pnlType = PNL_FIX | _pnlType = PNL_PROJECT_SMOKE | _pnlType = PNL_PROJECT	then
		_glsArea = _glsArea + _pnlWdt*_pnlHgt	:	_nCount = _nCount + 1
	endif

	!	스팬드럴(TYPE1)	유리
	if	_pnlType = PNL_SPANDREL	then
		_glsArea_Spd1 = _glsArea_Spd1 + _pnlWdt*_pnlHgt	:	_nCount = _nCount + 1
	endif

	!	스팬드럴(TYPE2)	유리
	if	_pnlType = PNL_SPANDREL_SUB	then
		_glsArea_Spd2 = _glsArea_Spd2 + _pnlWdt*_pnlHgt	:	_nCount = _nCount + 1
	endif

	!	스팬드럴(TYPE3)	유리
	if	_pnlType = PNL_SPANDREL_SUB2	then
		_glsArea_Spd3 = _glsArea_Spd3 + _pnlWdt*_pnlHgt	:	_nCount = _nCount + 1
	endif

	!	스팬드럴(TYPE4)	유리
	if	_pnlType = PNL_SPANDREL_SUB3	then
		_glsArea_Spd4 = _glsArea_Spd4 + _pnlWdt*_pnlHgt	:	_nCount = _nCount + 1
	endif

return