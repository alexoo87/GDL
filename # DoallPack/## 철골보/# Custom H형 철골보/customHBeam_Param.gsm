!===============================================================================================
!	Custom H형 철골보
!===============================================================================================

!	재질 정보
!-----------------------------------------------------------------------------------------------
dim stSteelMatl[]

ch = open ("text", "KS_H_Steel_Material.txt", "separator='\t', mode = ro, library")
file_dependence "KS_H_Steel_Material.txt"

i = 1

do
	n = input (ch, i, 1, stSteelMatl[i])
	i = i + 1
while n = 1

stSteelMatl[i - 1] = "---"
close ch

values	"m_SteelMatl"	stSteelMatl,	CUSTOM

!	호칭 치수
!-----------------------------------------------------------------------------------------------
lock	"lastProfile"

_lastProfile = ""
_stFormat = "%.0mm"

_lastProfile = _lastProfile + "H-"

_maxHeight = max(beamHL,	beamHR)
_minHeight = min(beamHL,	beamHR)
if	abs(_maxHeight - _minHeight) < eps	then
	_lastProfile = _lastProfile + str(_stFormat,	_maxHeight)
else
	_lastProfile = _lastProfile + "(" + str(_stFormat,	_maxHeight) + "~" + str(_stFormat,	_minHeight) + ")"
endif
_lastProfile = _lastProfile + "X"

_maxWidth = max(beamBL,	beamBR)
_minWidth = min(beamBL,	beamBR)
if	abs(_maxWidth - _minWidth) < eps	then
	_lastProfile = _lastProfile + str(_stFormat,	_maxWidth)
else
	_lastProfile = _lastProfile + "(" + str(_stFormat,	_maxWidth) + "~" + str(_stFormat,	_minWidth) + ")"
endif
_lastProfile = _lastProfile + "X"

_maxT1 = max(beamT1L,	beamT1R)
_minT1 = min(beamT1L,	beamT1R)
if	abs(_maxT1 - _minT1) < eps	then
	_lastProfile = _lastProfile + str(_stFormat,	_maxT1)
else
	_lastProfile = _lastProfile + "(" + str(_stFormat,	_maxT1) + "~" + str(_stFormat,	_minT1) + ")"
endif
_lastProfile = _lastProfile + "X"

_maxT2 = max(beamT2L,	beamT2R)
_minT2 = min(beamT2L,	beamT2R)
if	abs(_maxT2 - _minT2) < eps	then
	_lastProfile = _lastProfile + str(_stFormat,	_maxT2)
else
	_lastProfile = _lastProfile + "(" + str(_stFormat,	_maxT2) + "~" + str(_stFormat,	_minT2) + ")"
endif

parameters	lastProfile = _lastProfile



!	철골보 길이
!-----------------------------------------------------------------------------------------------
values	"beamLth"	range	(0,	)

!	중심 위치
!-----------------------------------------------------------------------------------------------
values{2}	"iArrange"	ARRANGE_TOP,	stArrange[ARRANGE_TOP],
						ARRANGE_CENTER,	stArrange[ARRANGE_CENTER],
						ARRANGE_BOTTOM,	stArrange[ARRANGE_BOTTOM]

!	Profile
!-----------------------------------------------------------------------------------------------
values	"beamHL"	range	(beamT2L*2,	)
values	"beamBL"	range	(beamT1L,	)
values	"beamT1L"	range	(0,	)
values	"beamT2L"	range	(0,	)


!	Cut Plane
!-----------------------------------------------------------------------------------------------
values{2}	"iCutPlaneL"	CutPlane_vert,	stCutPlane[CutPlane_vert],
							CutPlane_horz,	stCutPlane[CutPlane_horz]

values{2}	"iCutPlaneR"	CutPlane_vert,	stCutPlane[CutPlane_vert],
							CutPlane_horz,	stCutPlane[CutPlane_horz]

!	Offset
values	"offsetL"	range	[0,	beamLth/2)
values	"offsetR"	range	[0,	beamLth/2)

!	cutCenL/R
_rangeCen_L = beamBL/2
_rangeCen_R = beamBR/2

if	iCutPlaneL = CutPlane_horz	then
	_rangeCen_L = beamHL/2
endif
if	iCutPlaneR = CutPlane_horz	then
	_rangeCen_R = beamHR/2
endif

values	"cutCenL"	range	[-_rangeCen_L,	_rangeCen_L]
values	"cutCenR"	range	[-_rangeCen_R,	_rangeCen_R]

values	"cutLthL1"	range	(-(beamLth/2 - offsetL),	beamLth/2 - offsetL)
values	"cutLthL2"	range	(-(beamLth/2 - offsetL),	beamLth/2 - offsetL)

values	"cutLthR1"	range	(-(beamLth/2 - offsetR),	beamLth/2 - offsetR)
values	"cutLthR2"	range	(-(beamLth/2 - offsetR),	beamLth/2 - offsetR)


!	접합 형태
!-----------------------------------------------------------------------------------------------
values{2}	"iAttachL"	Attach_Moment,	stAttach[Attach_Moment],
						Attach_PIN,		stAttach[Attach_PIN],
						Attach_None,	stAttach[Attach_None]

values{2}	"iAttachR"	Attach_Moment,	stAttach[Attach_Moment],
						Attach_PIN,		stAttach[Attach_PIN],
						Attach_None,	stAttach[Attach_None]


!	Floor Plan Display
!-----------------------------------------------------------------------------------------------
values{2}	"iDisplay"	Display_Projected,		stDisplay[Display_Projected],
						Display_WithOverhead,	stDisplay[Display_WithOverhead],
						Display_Symbolic,		stDisplay[Display_Symbolic],
						Display_Outlines,		stDisplay[Display_Outlines],
						Display_Overhead,		stDisplay[Display_Overhead]

values{2}	"iDisplayCore"	Display_Projected,		stDisplay[Display_Projected],
							Display_WithOverhead,	stDisplay[Display_WithOverhead],
							Display_Symbolic,		stDisplay[Display_Symbolic],
							Display_Outlines,		stDisplay[Display_Outlines],
							Display_Overhead,		stDisplay[Display_Overhead]

if	not(iDisplay = Display_Projected | iDisplay = Display_WithOverhead)\
	& not(iDisplayCore = Display_Projected | iDisplayCore = Display_WithOverhead)	then
	lock			"cutPen", "cutFill", "cutFillPen", "cutBackPen"
	hideparameter	"cutPen", "cutFill", "cutFillPen", "cutBackPen"
endif

if	not(iDisplay = Display_WithOverhead | iDisplay = Display_Overhead)\
	& not(iDisplayCore = Display_WithOverhead | iDisplayCore = Display_Overhead)	then
	lock			"overPen", "overLT"
	hideparameter	"overPen", "overLT"
endif

if	not(iDisplay = Display_Projected | iDisplay = Display_WithOverhead | iDisplay = Display_Outlines)\
	& not(iDisplayCore = Display_Projected | iDisplayCore = Display_WithOverhead | iDisplayCore = Display_Outlines)	then
	lock			"btmPen", "btmFill", "btmFillPen", "btmBackPen"
	hideparameter	"btmPen", "btmFill", "btmFillPen", "btmBackPen"
endif

if	not(iDisplay = Display_Symbolic) & not(iDisplayCore = Display_Symbolic)	then
	lock			"symPen", "symSize", "symOffsetL", "symOffsetR", "symFill", "symFillPen", "symBackPen"
	hideparameter	"symPen", "symSize", "symOffsetL", "symOffsetR", "symFill", "symFillPen", "symBackPen"
endif


!	Show Projection To
!-----------------------------------------------------------------------------------------------
values{2}	"iProjectTo"	ProjectTo_FloorPlan,	stProjectTo[ProjectTo_FloorPlan],
							ProjectTo_Absolute,		stProjectTo[ProjectTo_Absolute],
							ProjectTo_Entire,		stProjectTo[ProjectTo_Entire]


!	Y축 회전 기준점
!-----------------------------------------------------------------------------------------------
values{2}	"iRotY"	Rotation_Top,		stRotation[Rotation_Top],
					Rotation_Center,	stRotation[Rotation_Center],
					Rotation_Bottom,	stRotation[Rotation_Bottom]

values	"aRotY"	range	[0,	360)
values	"aRotX"	range	[0,	360)


!	3D Detail Level
!-----------------------------------------------------------------------------------------------
values{2}	"iDetailLevel"	DetailLevel_Detailed,	stDetailLevel[DetailLevel_Detailed],
							DetailLevel_Simple,		stDetailLevel[DetailLevel_Simple],
							DetailLevel_None,		stDetailLevel[DetailLevel_None]
